
gof.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 3f 00 00 	mov    0x3fdd(%rip),%rax        # 4fe8 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 e2 3f 00 00    	push   0x3fe2(%rip)        # 5008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 3f 00 00    	jmp    *0x3fe4(%rip)        # 5010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 e2 3f 00 00    	jmp    *0x3fe2(%rip)        # 5018 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <omp_set_schedule@plt>:
    1040:	ff 25 da 3f 00 00    	jmp    *0x3fda(%rip)        # 5020 <omp_set_schedule@OMP_3.0>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <clock@plt>:
    1050:	ff 25 d2 3f 00 00    	jmp    *0x3fd2(%rip)        # 5028 <clock@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 3f 00 00    	jmp    *0x3fca(%rip)        # 5030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <omp_get_wtime@plt>:
    1070:	ff 25 c2 3f 00 00    	jmp    *0x3fc2(%rip)        # 5038 <omp_get_wtime@OMP_2.0>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <strlen@plt>:
    1080:	ff 25 ba 3f 00 00    	jmp    *0x3fba(%rip)        # 5040 <strlen@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <rand_r@plt>:
    1090:	ff 25 b2 3f 00 00    	jmp    *0x3fb2(%rip)        # 5048 <rand_r@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <getopt_long@plt>:
    10a0:	ff 25 aa 3f 00 00    	jmp    *0x3faa(%rip)        # 5050 <getopt_long@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <printf@plt>:
    10b0:	ff 25 a2 3f 00 00    	jmp    *0x3fa2(%rip)        # 5058 <printf@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <GOMP_loop_maybe_nonmonotonic_runtime_start@plt>:
    10c0:	ff 25 9a 3f 00 00    	jmp    *0x3f9a(%rip)        # 5060 <GOMP_loop_maybe_nonmonotonic_runtime_start@GOMP_5.0>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <GOMP_loop_end_nowait@plt>:
    10d0:	ff 25 92 3f 00 00    	jmp    *0x3f92(%rip)        # 5068 <GOMP_loop_end_nowait@GOMP_1.0>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <fputc@plt>:
    10e0:	ff 25 8a 3f 00 00    	jmp    *0x3f8a(%rip)        # 5070 <fputc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fprintf@plt>:
    10f0:	ff 25 82 3f 00 00    	jmp    *0x3f82(%rip)        # 5078 <fprintf@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <strtol@plt>:
    1100:	ff 25 7a 3f 00 00    	jmp    *0x3f7a(%rip)        # 5080 <strtol@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <time@plt>:
    1110:	ff 25 72 3f 00 00    	jmp    *0x3f72(%rip)        # 5088 <time@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <malloc@plt>:
    1120:	ff 25 6a 3f 00 00    	jmp    *0x3f6a(%rip)        # 5090 <malloc@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <pthread_self@plt>:
    1130:	ff 25 62 3f 00 00    	jmp    *0x3f62(%rip)        # 5098 <pthread_self@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   $0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <omp_get_schedule@plt>:
    1140:	ff 25 5a 3f 00 00    	jmp    *0x3f5a(%rip)        # 50a0 <omp_get_schedule@OMP_3.0>
    1146:	68 11 00 00 00       	push   $0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <GOMP_loop_maybe_nonmonotonic_runtime_next@plt>:
    1150:	ff 25 52 3f 00 00    	jmp    *0x3f52(%rip)        # 50a8 <GOMP_loop_maybe_nonmonotonic_runtime_next@GOMP_5.0>
    1156:	68 12 00 00 00       	push   $0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <fopen@plt>:
    1160:	ff 25 4a 3f 00 00    	jmp    *0x3f4a(%rip)        # 50b0 <fopen@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   $0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <strtok@plt>:
    1170:	ff 25 42 3f 00 00    	jmp    *0x3f42(%rip)        # 50b8 <strtok@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   $0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <atoi@plt>:
    1180:	ff 25 3a 3f 00 00    	jmp    *0x3f3a(%rip)        # 50c0 <atoi@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	push   $0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <sprintf@plt>:
    1190:	ff 25 32 3f 00 00    	jmp    *0x3f32(%rip)        # 50c8 <sprintf@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   $0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <exit@plt>:
    11a0:	ff 25 2a 3f 00 00    	jmp    *0x3f2a(%rip)        # 50d0 <exit@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   $0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <fwrite@plt>:
    11b0:	ff 25 22 3f 00 00    	jmp    *0x3f22(%rip)        # 50d8 <fwrite@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	push   $0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011c0 <omp_get_thread_limit@plt>:
    11c0:	ff 25 1a 3f 00 00    	jmp    *0x3f1a(%rip)        # 50e0 <omp_get_thread_limit@OMP_3.0>
    11c6:	68 19 00 00 00       	push   $0x19
    11cb:	e9 50 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011d0 <GOMP_parallel@plt>:
    11d0:	ff 25 12 3f 00 00    	jmp    *0x3f12(%rip)        # 50e8 <GOMP_parallel@GOMP_4.0>
    11d6:	68 1a 00 00 00       	push   $0x1a
    11db:	e9 40 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011e0 <__cxa_finalize@plt>:
    11e0:	ff 25 12 3e 00 00    	jmp    *0x3e12(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    11e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000011f0 <_start>:
    11f0:	31 ed                	xor    %ebp,%ebp
    11f2:	49 89 d1             	mov    %rdx,%r9
    11f5:	5e                   	pop    %rsi
    11f6:	48 89 e2             	mov    %rsp,%rdx
    11f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11fd:	50                   	push   %rax
    11fe:	54                   	push   %rsp
    11ff:	4c 8d 05 0a 1a 00 00 	lea    0x1a0a(%rip),%r8        # 2c10 <__libc_csu_fini>
    1206:	48 8d 0d a3 19 00 00 	lea    0x19a3(%rip),%rcx        # 2bb0 <__libc_csu_init>
    120d:	48 8d 3d f8 0a 00 00 	lea    0xaf8(%rip),%rdi        # 1d0c <main>
    1214:	ff 15 c6 3d 00 00    	call   *0x3dc6(%rip)        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    121a:	f4                   	hlt    
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <deregister_tm_clones>:
    1220:	48 8d 3d f9 40 00 00 	lea    0x40f9(%rip),%rdi        # 5320 <optarg@@GLIBC_2.2.5>
    1227:	48 8d 05 f2 40 00 00 	lea    0x40f2(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    122e:	48 39 f8             	cmp    %rdi,%rax
    1231:	74 15                	je     1248 <deregister_tm_clones+0x28>
    1233:	48 8b 05 9e 3d 00 00 	mov    0x3d9e(%rip),%rax        # 4fd8 <_ITM_deregisterTMCloneTable@Base>
    123a:	48 85 c0             	test   %rax,%rax
    123d:	74 09                	je     1248 <deregister_tm_clones+0x28>
    123f:	ff e0                	jmp    *%rax
    1241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1248:	c3                   	ret    
    1249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001250 <register_tm_clones>:
    1250:	48 8d 3d c9 40 00 00 	lea    0x40c9(%rip),%rdi        # 5320 <optarg@@GLIBC_2.2.5>
    1257:	48 8d 35 c2 40 00 00 	lea    0x40c2(%rip),%rsi        # 5320 <optarg@@GLIBC_2.2.5>
    125e:	48 29 fe             	sub    %rdi,%rsi
    1261:	48 89 f0             	mov    %rsi,%rax
    1264:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1268:	48 c1 f8 03          	sar    $0x3,%rax
    126c:	48 01 c6             	add    %rax,%rsi
    126f:	48 d1 fe             	sar    %rsi
    1272:	74 14                	je     1288 <register_tm_clones+0x38>
    1274:	48 8b 05 75 3d 00 00 	mov    0x3d75(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable@Base>
    127b:	48 85 c0             	test   %rax,%rax
    127e:	74 08                	je     1288 <register_tm_clones+0x38>
    1280:	ff e0                	jmp    *%rax
    1282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1288:	c3                   	ret    
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001290 <__do_global_dtors_aux>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	80 3d 8d 40 00 00 00 	cmpb   $0x0,0x408d(%rip)        # 5328 <completed.0>
    129b:	75 2b                	jne    12c8 <__do_global_dtors_aux+0x38>
    129d:	55                   	push   %rbp
    129e:	48 83 3d 52 3d 00 00 	cmpq   $0x0,0x3d52(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    12a5:	00 
    12a6:	48 89 e5             	mov    %rsp,%rbp
    12a9:	74 0c                	je     12b7 <__do_global_dtors_aux+0x27>
    12ab:	48 8b 3d 56 3e 00 00 	mov    0x3e56(%rip),%rdi        # 5108 <__dso_handle>
    12b2:	e8 29 ff ff ff       	call   11e0 <__cxa_finalize@plt>
    12b7:	e8 64 ff ff ff       	call   1220 <deregister_tm_clones>
    12bc:	c6 05 65 40 00 00 01 	movb   $0x1,0x4065(%rip)        # 5328 <completed.0>
    12c3:	5d                   	pop    %rbp
    12c4:	c3                   	ret    
    12c5:	0f 1f 00             	nopl   (%rax)
    12c8:	c3                   	ret    
    12c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012d0 <frame_dummy>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	e9 77 ff ff ff       	jmp    1250 <register_tm_clones>

00000000000012d9 <field_initializer>:
    12d9:	55                   	push   %rbp
    12da:	48 89 e5             	mov    %rsp,%rbp
    12dd:	48 83 ec 40          	sub    $0x40,%rsp
    12e1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    12e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    12e9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    12ed:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    12f1:	b9 00 00 00 00       	mov    $0x0,%ecx
    12f6:	ba 00 00 00 00       	mov    $0x0,%edx
    12fb:	48 89 c6             	mov    %rax,%rsi
    12fe:	48 8d 05 36 0e 00 00 	lea    0xe36(%rip),%rax        # 213b <field_initializer._omp_fn.0>
    1305:	48 89 c7             	mov    %rax,%rdi
    1308:	e8 c3 fe ff ff       	call   11d0 <GOMP_parallel@plt>
    130d:	90                   	nop
    130e:	c9                   	leave  
    130f:	c3                   	ret    

0000000000001310 <calculate_corners>:
    1310:	55                   	push   %rbp
    1311:	48 89 e5             	mov    %rsp,%rbp
    1314:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1318:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    131c:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    1320:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1324:	48 83 c0 01          	add    $0x1,%rax
    1328:	0f b6 10             	movzbl (%rax),%edx
    132b:	48 8b 0d f6 3d 00 00 	mov    0x3df6(%rip),%rcx        # 5128 <columns>
    1332:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1336:	48 01 c8             	add    %rcx,%rax
    1339:	0f b6 00             	movzbl (%rax),%eax
    133c:	01 c2                	add    %eax,%edx
    133e:	48 8b 05 e3 3d 00 00 	mov    0x3de3(%rip),%rax        # 5128 <columns>
    1345:	48 8d 48 01          	lea    0x1(%rax),%rcx
    1349:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    134d:	48 01 c8             	add    %rcx,%rax
    1350:	0f b6 00             	movzbl (%rax),%eax
    1353:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    1356:	48 8b 05 d3 3d 00 00 	mov    0x3dd3(%rip),%rax        # 5130 <rows>
    135d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1361:	48 8b 05 c0 3d 00 00 	mov    0x3dc0(%rip),%rax        # 5128 <columns>
    1368:	48 0f af d0          	imul   %rax,%rdx
    136c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1370:	48 01 d0             	add    %rdx,%rax
    1373:	0f b6 00             	movzbl (%rax),%eax
    1376:	01 c1                	add    %eax,%ecx
    1378:	48 8b 05 b1 3d 00 00 	mov    0x3db1(%rip),%rax        # 5130 <rows>
    137f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1383:	48 8b 05 9e 3d 00 00 	mov    0x3d9e(%rip),%rax        # 5128 <columns>
    138a:	48 0f af c2          	imul   %rdx,%rax
    138e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1392:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1396:	48 01 d0             	add    %rdx,%rax
    1399:	0f b6 00             	movzbl (%rax),%eax
    139c:	8d 14 01             	lea    (%rcx,%rax,1),%edx
    139f:	48 8b 05 82 3d 00 00 	mov    0x3d82(%rip),%rax        # 5128 <columns>
    13a6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    13aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13ae:	48 01 c8             	add    %rcx,%rax
    13b1:	0f b6 00             	movzbl (%rax),%eax
    13b4:	01 c2                	add    %eax,%edx
    13b6:	48 8b 05 6b 3d 00 00 	mov    0x3d6b(%rip),%rax        # 5128 <columns>
    13bd:	48 01 c0             	add    %rax,%rax
    13c0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    13c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13c8:	48 01 c8             	add    %rcx,%rax
    13cb:	0f b6 00             	movzbl (%rax),%eax
    13ce:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    13d1:	48 8b 15 58 3d 00 00 	mov    0x3d58(%rip),%rdx        # 5130 <rows>
    13d8:	48 8b 05 49 3d 00 00 	mov    0x3d49(%rip),%rax        # 5128 <columns>
    13df:	48 0f af c2          	imul   %rdx,%rax
    13e3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    13e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13eb:	48 01 d0             	add    %rdx,%rax
    13ee:	0f b6 00             	movzbl (%rax),%eax
    13f1:	01 c8                	add    %ecx,%eax
    13f3:	88 45 ff             	mov    %al,-0x1(%rbp)
    13f6:	80 7d ff 03          	cmpb   $0x3,-0x1(%rbp)
    13fa:	0f 94 c0             	sete   %al
    13fd:	89 c2                	mov    %eax,%edx
    13ff:	80 7d ff 02          	cmpb   $0x2,-0x1(%rbp)
    1403:	0f 94 c0             	sete   %al
    1406:	89 c1                	mov    %eax,%ecx
    1408:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    140c:	0f b6 00             	movzbl (%rax),%eax
    140f:	21 c8                	and    %ecx,%eax
    1411:	09 d0                	or     %edx,%eax
    1413:	89 c2                	mov    %eax,%edx
    1415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1419:	88 10                	mov    %dl,(%rax)
    141b:	48 8b 05 06 3d 00 00 	mov    0x3d06(%rip),%rax        # 5128 <columns>
    1422:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    1426:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    142a:	48 01 d0             	add    %rdx,%rax
    142d:	0f b6 10             	movzbl (%rax),%edx
    1430:	48 8b 05 f1 3c 00 00 	mov    0x3cf1(%rip),%rax        # 5128 <columns>
    1437:	48 01 c0             	add    %rax,%rax
    143a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    143e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1442:	48 01 c8             	add    %rcx,%rax
    1445:	0f b6 00             	movzbl (%rax),%eax
    1448:	01 c2                	add    %eax,%edx
    144a:	48 8b 05 d7 3c 00 00 	mov    0x3cd7(%rip),%rax        # 5128 <columns>
    1451:	48 01 c0             	add    %rax,%rax
    1454:	48 8d 48 fe          	lea    -0x2(%rax),%rcx
    1458:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    145c:	48 01 c8             	add    %rcx,%rax
    145f:	0f b6 00             	movzbl (%rax),%eax
    1462:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    1465:	48 8b 15 c4 3c 00 00 	mov    0x3cc4(%rip),%rdx        # 5130 <rows>
    146c:	48 8b 05 b5 3c 00 00 	mov    0x3cb5(%rip),%rax        # 5128 <columns>
    1473:	48 0f af c2          	imul   %rdx,%rax
    1477:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    147b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    147f:	48 01 d0             	add    %rdx,%rax
    1482:	0f b6 00             	movzbl (%rax),%eax
    1485:	01 c1                	add    %eax,%ecx
    1487:	48 8b 15 a2 3c 00 00 	mov    0x3ca2(%rip),%rdx        # 5130 <rows>
    148e:	48 8b 05 93 3c 00 00 	mov    0x3c93(%rip),%rax        # 5128 <columns>
    1495:	48 0f af c2          	imul   %rdx,%rax
    1499:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    149d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14a1:	48 01 d0             	add    %rdx,%rax
    14a4:	0f b6 00             	movzbl (%rax),%eax
    14a7:	8d 14 01             	lea    (%rcx,%rax,1),%edx
    14aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14ae:	0f b6 00             	movzbl (%rax),%eax
    14b1:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    14b4:	48 8b 15 6d 3c 00 00 	mov    0x3c6d(%rip),%rdx        # 5128 <columns>
    14bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14bf:	48 01 d0             	add    %rdx,%rax
    14c2:	0f b6 00             	movzbl (%rax),%eax
    14c5:	01 c1                	add    %eax,%ecx
    14c7:	48 8b 05 62 3c 00 00 	mov    0x3c62(%rip),%rax        # 5130 <rows>
    14ce:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    14d2:	48 8b 05 4f 3c 00 00 	mov    0x3c4f(%rip),%rax        # 5128 <columns>
    14d9:	48 0f af d0          	imul   %rax,%rdx
    14dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14e1:	48 01 d0             	add    %rdx,%rax
    14e4:	0f b6 00             	movzbl (%rax),%eax
    14e7:	01 c8                	add    %ecx,%eax
    14e9:	88 45 ff             	mov    %al,-0x1(%rbp)
    14ec:	80 7d ff 03          	cmpb   $0x3,-0x1(%rbp)
    14f0:	0f 94 c0             	sete   %al
    14f3:	89 c1                	mov    %eax,%ecx
    14f5:	80 7d ff 02          	cmpb   $0x2,-0x1(%rbp)
    14f9:	0f 94 c0             	sete   %al
    14fc:	89 c6                	mov    %eax,%esi
    14fe:	48 8b 05 23 3c 00 00 	mov    0x3c23(%rip),%rax        # 5128 <columns>
    1505:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    150d:	48 01 d0             	add    %rdx,%rax
    1510:	0f b6 00             	movzbl (%rax),%eax
    1513:	21 f0                	and    %esi,%eax
    1515:	09 c1                	or     %eax,%ecx
    1517:	89 ca                	mov    %ecx,%edx
    1519:	48 8b 05 08 3c 00 00 	mov    0x3c08(%rip),%rax        # 5128 <columns>
    1520:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    1524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1528:	48 01 c8             	add    %rcx,%rax
    152b:	88 10                	mov    %dl,(%rax)
    152d:	48 8b 05 fc 3b 00 00 	mov    0x3bfc(%rip),%rax        # 5130 <rows>
    1534:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    1538:	48 8b 05 e9 3b 00 00 	mov    0x3be9(%rip),%rax        # 5128 <columns>
    153f:	48 0f af d0          	imul   %rax,%rdx
    1543:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1547:	48 01 d0             	add    %rdx,%rax
    154a:	0f b6 08             	movzbl (%rax),%ecx
    154d:	48 8b 05 dc 3b 00 00 	mov    0x3bdc(%rip),%rax        # 5130 <rows>
    1554:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    1558:	48 8b 05 c9 3b 00 00 	mov    0x3bc9(%rip),%rax        # 5128 <columns>
    155f:	48 0f af c2          	imul   %rdx,%rax
    1563:	48 8d 50 01          	lea    0x1(%rax),%rdx
    1567:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    156b:	48 01 d0             	add    %rdx,%rax
    156e:	0f b6 00             	movzbl (%rax),%eax
    1571:	01 c1                	add    %eax,%ecx
    1573:	48 8b 05 b6 3b 00 00 	mov    0x3bb6(%rip),%rax        # 5130 <rows>
    157a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    157e:	48 8b 05 a3 3b 00 00 	mov    0x3ba3(%rip),%rax        # 5128 <columns>
    1585:	48 0f af c2          	imul   %rdx,%rax
    1589:	48 8d 50 01          	lea    0x1(%rax),%rdx
    158d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1591:	48 01 d0             	add    %rdx,%rax
    1594:	0f b6 00             	movzbl (%rax),%eax
    1597:	8d 14 01             	lea    (%rcx,%rax,1),%edx
    159a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    159e:	0f b6 00             	movzbl (%rax),%eax
    15a1:	01 c2                	add    %eax,%edx
    15a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15a7:	48 83 c0 01          	add    $0x1,%rax
    15ab:	0f b6 00             	movzbl (%rax),%eax
    15ae:	01 c2                	add    %eax,%edx
    15b0:	48 8b 05 71 3b 00 00 	mov    0x3b71(%rip),%rax        # 5128 <columns>
    15b7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    15bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15bf:	48 01 c8             	add    %rcx,%rax
    15c2:	0f b6 00             	movzbl (%rax),%eax
    15c5:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    15c8:	48 8b 05 61 3b 00 00 	mov    0x3b61(%rip),%rax        # 5130 <rows>
    15cf:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    15d3:	48 8b 05 4e 3b 00 00 	mov    0x3b4e(%rip),%rax        # 5128 <columns>
    15da:	48 0f af c2          	imul   %rdx,%rax
    15de:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    15e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15e6:	48 01 d0             	add    %rdx,%rax
    15e9:	0f b6 00             	movzbl (%rax),%eax
    15ec:	01 c1                	add    %eax,%ecx
    15ee:	48 8b 15 3b 3b 00 00 	mov    0x3b3b(%rip),%rdx        # 5130 <rows>
    15f5:	48 8b 05 2c 3b 00 00 	mov    0x3b2c(%rip),%rax        # 5128 <columns>
    15fc:	48 0f af c2          	imul   %rdx,%rax
    1600:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1604:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1608:	48 01 d0             	add    %rdx,%rax
    160b:	0f b6 00             	movzbl (%rax),%eax
    160e:	01 c8                	add    %ecx,%eax
    1610:	88 45 ff             	mov    %al,-0x1(%rbp)
    1613:	80 7d ff 03          	cmpb   $0x3,-0x1(%rbp)
    1617:	0f 94 c0             	sete   %al
    161a:	89 c1                	mov    %eax,%ecx
    161c:	80 7d ff 02          	cmpb   $0x2,-0x1(%rbp)
    1620:	0f 94 c0             	sete   %al
    1623:	89 c6                	mov    %eax,%esi
    1625:	48 8b 05 04 3b 00 00 	mov    0x3b04(%rip),%rax        # 5130 <rows>
    162c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1630:	48 8b 05 f1 3a 00 00 	mov    0x3af1(%rip),%rax        # 5128 <columns>
    1637:	48 0f af d0          	imul   %rax,%rdx
    163b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    163f:	48 01 d0             	add    %rdx,%rax
    1642:	0f b6 00             	movzbl (%rax),%eax
    1645:	21 f0                	and    %esi,%eax
    1647:	09 c1                	or     %eax,%ecx
    1649:	48 8b 05 e0 3a 00 00 	mov    0x3ae0(%rip),%rax        # 5130 <rows>
    1650:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1654:	48 8b 05 cd 3a 00 00 	mov    0x3acd(%rip),%rax        # 5128 <columns>
    165b:	48 0f af d0          	imul   %rax,%rdx
    165f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1663:	48 01 d0             	add    %rdx,%rax
    1666:	89 ca                	mov    %ecx,%edx
    1668:	88 10                	mov    %dl,(%rax)
    166a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    166e:	0f b6 10             	movzbl (%rax),%edx
    1671:	48 8b 05 b0 3a 00 00 	mov    0x3ab0(%rip),%rax        # 5128 <columns>
    1678:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    167c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1680:	48 01 c8             	add    %rcx,%rax
    1683:	0f b6 00             	movzbl (%rax),%eax
    1686:	01 c2                	add    %eax,%edx
    1688:	48 8b 05 99 3a 00 00 	mov    0x3a99(%rip),%rax        # 5128 <columns>
    168f:	48 8d 48 fe          	lea    -0x2(%rax),%rcx
    1693:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1697:	48 01 c8             	add    %rcx,%rax
    169a:	0f b6 00             	movzbl (%rax),%eax
    169d:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    16a0:	48 8b 05 89 3a 00 00 	mov    0x3a89(%rip),%rax        # 5130 <rows>
    16a7:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    16ab:	48 8b 05 76 3a 00 00 	mov    0x3a76(%rip),%rax        # 5128 <columns>
    16b2:	48 0f af d0          	imul   %rax,%rdx
    16b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16ba:	48 01 d0             	add    %rdx,%rax
    16bd:	0f b6 00             	movzbl (%rax),%eax
    16c0:	01 c1                	add    %eax,%ecx
    16c2:	48 8b 05 67 3a 00 00 	mov    0x3a67(%rip),%rax        # 5130 <rows>
    16c9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    16cd:	48 8b 05 54 3a 00 00 	mov    0x3a54(%rip),%rax        # 5128 <columns>
    16d4:	48 0f af d0          	imul   %rax,%rdx
    16d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    16dc:	48 01 d0             	add    %rdx,%rax
    16df:	0f b6 00             	movzbl (%rax),%eax
    16e2:	01 c1                	add    %eax,%ecx
    16e4:	48 8b 05 45 3a 00 00 	mov    0x3a45(%rip),%rax        # 5130 <rows>
    16eb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    16ef:	48 8b 05 32 3a 00 00 	mov    0x3a32(%rip),%rax        # 5128 <columns>
    16f6:	48 0f af c2          	imul   %rdx,%rax
    16fa:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    16fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1702:	48 01 d0             	add    %rdx,%rax
    1705:	0f b6 00             	movzbl (%rax),%eax
    1708:	01 c1                	add    %eax,%ecx
    170a:	48 8b 05 1f 3a 00 00 	mov    0x3a1f(%rip),%rax        # 5130 <rows>
    1711:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    1715:	48 8b 05 0c 3a 00 00 	mov    0x3a0c(%rip),%rax        # 5128 <columns>
    171c:	48 0f af c2          	imul   %rdx,%rax
    1720:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    1724:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1728:	48 01 d0             	add    %rdx,%rax
    172b:	0f b6 00             	movzbl (%rax),%eax
    172e:	01 c1                	add    %eax,%ecx
    1730:	48 8b 15 f9 39 00 00 	mov    0x39f9(%rip),%rdx        # 5130 <rows>
    1737:	48 8b 05 ea 39 00 00 	mov    0x39ea(%rip),%rax        # 5128 <columns>
    173e:	48 0f af c2          	imul   %rdx,%rax
    1742:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    1746:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    174a:	48 01 d0             	add    %rdx,%rax
    174d:	0f b6 00             	movzbl (%rax),%eax
    1750:	01 c8                	add    %ecx,%eax
    1752:	88 45 ff             	mov    %al,-0x1(%rbp)
    1755:	80 7d ff 03          	cmpb   $0x3,-0x1(%rbp)
    1759:	0f 94 c0             	sete   %al
    175c:	89 c1                	mov    %eax,%ecx
    175e:	80 7d ff 02          	cmpb   $0x2,-0x1(%rbp)
    1762:	0f 94 c0             	sete   %al
    1765:	89 c6                	mov    %eax,%esi
    1767:	48 8b 15 c2 39 00 00 	mov    0x39c2(%rip),%rdx        # 5130 <rows>
    176e:	48 8b 05 b3 39 00 00 	mov    0x39b3(%rip),%rax        # 5128 <columns>
    1775:	48 0f af c2          	imul   %rdx,%rax
    1779:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    177d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1781:	48 01 d0             	add    %rdx,%rax
    1784:	0f b6 00             	movzbl (%rax),%eax
    1787:	21 f0                	and    %esi,%eax
    1789:	09 c1                	or     %eax,%ecx
    178b:	48 8b 15 9e 39 00 00 	mov    0x399e(%rip),%rdx        # 5130 <rows>
    1792:	48 8b 05 8f 39 00 00 	mov    0x398f(%rip),%rax        # 5128 <columns>
    1799:	48 0f af c2          	imul   %rdx,%rax
    179d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    17a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a5:	48 01 d0             	add    %rdx,%rax
    17a8:	89 ca                	mov    %ecx,%edx
    17aa:	88 10                	mov    %dl,(%rax)
    17ac:	90                   	nop
    17ad:	5d                   	pop    %rbp
    17ae:	c3                   	ret    

00000000000017af <calculate_left_right>:
    17af:	55                   	push   %rbp
    17b0:	48 89 e5             	mov    %rsp,%rbp
    17b3:	48 83 ec 30          	sub    $0x30,%rsp
    17b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    17c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17cb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17cf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    17d3:	b9 00 00 00 00       	mov    $0x0,%ecx
    17d8:	ba 00 00 00 00       	mov    $0x0,%edx
    17dd:	48 89 c6             	mov    %rax,%rsi
    17e0:	48 8d 05 9d 0a 00 00 	lea    0xa9d(%rip),%rax        # 2284 <calculate_left_right._omp_fn.0>
    17e7:	48 89 c7             	mov    %rax,%rdi
    17ea:	e8 e1 f9 ff ff       	call   11d0 <GOMP_parallel@plt>
    17ef:	90                   	nop
    17f0:	c9                   	leave  
    17f1:	c3                   	ret    

00000000000017f2 <calculate_top_bottom>:
    17f2:	55                   	push   %rbp
    17f3:	48 89 e5             	mov    %rsp,%rbp
    17f6:	48 83 ec 30          	sub    $0x30,%rsp
    17fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17fe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1802:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1806:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    180a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    180e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1812:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1816:	b9 00 00 00 00       	mov    $0x0,%ecx
    181b:	ba 00 00 00 00       	mov    $0x0,%edx
    1820:	48 89 c6             	mov    %rax,%rsi
    1823:	48 8d 05 b5 0d 00 00 	lea    0xdb5(%rip),%rax        # 25df <calculate_top_bottom._omp_fn.0>
    182a:	48 89 c7             	mov    %rax,%rdi
    182d:	e8 9e f9 ff ff       	call   11d0 <GOMP_parallel@plt>
    1832:	90                   	nop
    1833:	c9                   	leave  
    1834:	c3                   	ret    

0000000000001835 <calculate_next_gen>:
    1835:	55                   	push   %rbp
    1836:	48 89 e5             	mov    %rsp,%rbp
    1839:	48 83 ec 30          	sub    $0x30,%rsp
    183d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1841:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1845:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1849:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    184d:	48 89 d6             	mov    %rdx,%rsi
    1850:	48 89 c7             	mov    %rax,%rdi
    1853:	e8 b8 fa ff ff       	call   1310 <calculate_corners>
    1858:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    185c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1860:	48 89 d6             	mov    %rdx,%rsi
    1863:	48 89 c7             	mov    %rax,%rdi
    1866:	e8 44 ff ff ff       	call   17af <calculate_left_right>
    186b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    186f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1873:	48 89 d6             	mov    %rdx,%rsi
    1876:	48 89 c7             	mov    %rax,%rdi
    1879:	e8 74 ff ff ff       	call   17f2 <calculate_top_bottom>
    187e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1882:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1886:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    188a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    188e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1892:	b9 00 00 00 00       	mov    $0x0,%ecx
    1897:	ba 00 00 00 00       	mov    $0x0,%edx
    189c:	48 89 c6             	mov    %rax,%rsi
    189f:	48 8d 05 9c 10 00 00 	lea    0x109c(%rip),%rax        # 2942 <calculate_next_gen._omp_fn.0>
    18a6:	48 89 c7             	mov    %rax,%rdi
    18a9:	e8 22 f9 ff ff       	call   11d0 <GOMP_parallel@plt>
    18ae:	90                   	nop
    18af:	c9                   	leave  
    18b0:	c3                   	ret    

00000000000018b1 <write_pbm_file>:
    18b1:	55                   	push   %rbp
    18b2:	48 89 e5             	mov    %rsp,%rbp
    18b5:	48 83 ec 70          	sub    $0x70,%rsp
    18b9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    18bd:	89 75 94             	mov    %esi,-0x6c(%rbp)
    18c0:	8b 55 94             	mov    -0x6c(%rbp),%edx
    18c3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    18c7:	89 d1                	mov    %edx,%ecx
    18c9:	48 8d 15 70 38 00 00 	lea    0x3870(%rip),%rdx        # 5140 <output_fname>
    18d0:	48 8d 35 61 17 00 00 	lea    0x1761(%rip),%rsi        # 3038 <_IO_stdin_used+0x38>
    18d7:	48 89 c7             	mov    %rax,%rdi
    18da:	b8 00 00 00 00       	mov    $0x0,%eax
    18df:	e8 ac f8 ff ff       	call   1190 <sprintf@plt>
    18e4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    18e8:	48 8d 15 54 17 00 00 	lea    0x1754(%rip),%rdx        # 3043 <_IO_stdin_used+0x43>
    18ef:	48 89 d6             	mov    %rdx,%rsi
    18f2:	48 89 c7             	mov    %rax,%rdi
    18f5:	e8 66 f8 ff ff       	call   1160 <fopen@plt>
    18fa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    18fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1902:	48 89 c1             	mov    %rax,%rcx
    1905:	ba 03 00 00 00       	mov    $0x3,%edx
    190a:	be 01 00 00 00       	mov    $0x1,%esi
    190f:	48 8d 05 2f 17 00 00 	lea    0x172f(%rip),%rax        # 3045 <_IO_stdin_used+0x45>
    1916:	48 89 c7             	mov    %rax,%rdi
    1919:	e8 92 f8 ff ff       	call   11b0 <fwrite@plt>
    191e:	8b 55 94             	mov    -0x6c(%rbp),%edx
    1921:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1925:	48 8d 0d 24 17 00 00 	lea    0x1724(%rip),%rcx        # 3050 <_IO_stdin_used+0x50>
    192c:	48 89 ce             	mov    %rcx,%rsi
    192f:	48 89 c7             	mov    %rax,%rdi
    1932:	b8 00 00 00 00       	mov    $0x0,%eax
    1937:	e8 b4 f7 ff ff       	call   10f0 <fprintf@plt>
    193c:	48 8b 0d ed 37 00 00 	mov    0x37ed(%rip),%rcx        # 5130 <rows>
    1943:	48 8b 15 de 37 00 00 	mov    0x37de(%rip),%rdx        # 5128 <columns>
    194a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    194e:	48 8d 35 23 17 00 00 	lea    0x1723(%rip),%rsi        # 3078 <_IO_stdin_used+0x78>
    1955:	48 89 c7             	mov    %rax,%rdi
    1958:	b8 00 00 00 00       	mov    $0x0,%eax
    195d:	e8 8e f7 ff ff       	call   10f0 <fprintf@plt>
    1962:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1969:	eb 75                	jmp    19e0 <write_pbm_file+0x12f>
    196b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1972:	eb 45                	jmp    19b9 <write_pbm_file+0x108>
    1974:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1977:	48 63 d0             	movslq %eax,%rdx
    197a:	48 8b 05 a7 37 00 00 	mov    0x37a7(%rip),%rax        # 5128 <columns>
    1981:	48 0f af d0          	imul   %rax,%rdx
    1985:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1988:	48 98                	cltq   
    198a:	48 01 c2             	add    %rax,%rdx
    198d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1991:	48 01 d0             	add    %rdx,%rax
    1994:	0f b6 00             	movzbl (%rax),%eax
    1997:	0f b6 d0             	movzbl %al,%edx
    199a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    199e:	48 8d 0d dc 16 00 00 	lea    0x16dc(%rip),%rcx        # 3081 <_IO_stdin_used+0x81>
    19a5:	48 89 ce             	mov    %rcx,%rsi
    19a8:	48 89 c7             	mov    %rax,%rdi
    19ab:	b8 00 00 00 00       	mov    $0x0,%eax
    19b0:	e8 3b f7 ff ff       	call   10f0 <fprintf@plt>
    19b5:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    19b9:	8b 45 f8             	mov    -0x8(%rbp),%eax
    19bc:	48 63 d0             	movslq %eax,%rdx
    19bf:	48 8b 05 62 37 00 00 	mov    0x3762(%rip),%rax        # 5128 <columns>
    19c6:	48 39 c2             	cmp    %rax,%rdx
    19c9:	72 a9                	jb     1974 <write_pbm_file+0xc3>
    19cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19cf:	48 89 c6             	mov    %rax,%rsi
    19d2:	bf 0a 00 00 00       	mov    $0xa,%edi
    19d7:	e8 04 f7 ff ff       	call   10e0 <fputc@plt>
    19dc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    19e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    19e3:	48 63 d0             	movslq %eax,%rdx
    19e6:	48 8b 05 43 37 00 00 	mov    0x3743(%rip),%rax        # 5130 <rows>
    19ed:	48 39 c2             	cmp    %rax,%rdx
    19f0:	0f 82 75 ff ff ff    	jb     196b <write_pbm_file+0xba>
    19f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19fa:	48 89 c7             	mov    %rax,%rdi
    19fd:	e8 5e f6 ff ff       	call   1060 <fclose@plt>
    1a02:	90                   	nop
    1a03:	c9                   	leave  
    1a04:	c3                   	ret    

0000000000001a05 <argments>:
    1a05:	55                   	push   %rbp
    1a06:	48 89 e5             	mov    %rsp,%rbp
    1a09:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    1a10:	89 bd ec fe ff ff    	mov    %edi,-0x114(%rbp)
    1a16:	48 89 b5 e0 fe ff ff 	mov    %rsi,-0x120(%rbp)
    1a1d:	e9 af 02 00 00       	jmp    1cd1 <argments+0x2cc>
    1a22:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1a25:	83 e8 52             	sub    $0x52,%eax
    1a28:	83 f8 21             	cmp    $0x21,%eax
    1a2b:	0f 87 a0 02 00 00    	ja     1cd1 <argments+0x2cc>
    1a31:	89 c0                	mov    %eax,%eax
    1a33:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1a3a:	00 
    1a3b:	48 8d 05 ca 18 00 00 	lea    0x18ca(%rip),%rax        # 330c <_IO_stdin_used+0x30c>
    1a42:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    1a45:	48 98                	cltq   
    1a47:	48 8d 15 be 18 00 00 	lea    0x18be(%rip),%rdx        # 330c <_IO_stdin_used+0x30c>
    1a4e:	48 01 d0             	add    %rdx,%rax
    1a51:	ff e0                	jmp    *%rax
    1a53:	48 8b 05 c6 38 00 00 	mov    0x38c6(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1a5a:	48 89 c7             	mov    %rax,%rdi
    1a5d:	e8 1e f7 ff ff       	call   1180 <atoi@plt>
    1a62:	83 f8 03             	cmp    $0x3,%eax
    1a65:	74 33                	je     1a9a <argments+0x95>
    1a67:	83 f8 03             	cmp    $0x3,%eax
    1a6a:	7f 3f                	jg     1aab <argments+0xa6>
    1a6c:	83 f8 01             	cmp    $0x1,%eax
    1a6f:	74 07                	je     1a78 <argments+0x73>
    1a71:	83 f8 02             	cmp    $0x2,%eax
    1a74:	74 13                	je     1a89 <argments+0x84>
    1a76:	eb 33                	jmp    1aab <argments+0xa6>
    1a78:	be 01 00 00 00       	mov    $0x1,%esi
    1a7d:	bf 01 00 00 00       	mov    $0x1,%edi
    1a82:	e8 b9 f5 ff ff       	call   1040 <omp_set_schedule@plt>
    1a87:	eb 32                	jmp    1abb <argments+0xb6>
    1a89:	be 01 00 00 00       	mov    $0x1,%esi
    1a8e:	bf 02 00 00 00       	mov    $0x2,%edi
    1a93:	e8 a8 f5 ff ff       	call   1040 <omp_set_schedule@plt>
    1a98:	eb 21                	jmp    1abb <argments+0xb6>
    1a9a:	be 01 00 00 00       	mov    $0x1,%esi
    1a9f:	bf 03 00 00 00       	mov    $0x3,%edi
    1aa4:	e8 97 f5 ff ff       	call   1040 <omp_set_schedule@plt>
    1aa9:	eb 10                	jmp    1abb <argments+0xb6>
    1aab:	be 01 00 00 00       	mov    $0x1,%esi
    1ab0:	bf 04 00 00 00       	mov    $0x4,%edi
    1ab5:	e8 86 f5 ff ff       	call   1040 <omp_set_schedule@plt>
    1aba:	90                   	nop
    1abb:	e9 11 02 00 00       	jmp    1cd1 <argments+0x2cc>
    1ac0:	48 8b 05 59 38 00 00 	mov    0x3859(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1ac7:	48 89 c7             	mov    %rax,%rdi
    1aca:	e8 b1 f5 ff ff       	call   1080 <strlen@plt>
    1acf:	48 3d fe 00 00 00    	cmp    $0xfe,%rax
    1ad5:	76 19                	jbe    1af0 <argments+0xeb>
    1ad7:	48 8d 05 a7 15 00 00 	lea    0x15a7(%rip),%rax        # 3085 <_IO_stdin_used+0x85>
    1ade:	48 89 c7             	mov    %rax,%rdi
    1ae1:	e8 4a f5 ff ff       	call   1030 <puts@plt>
    1ae6:	bf 01 00 00 00       	mov    $0x1,%edi
    1aeb:	e8 b0 f6 ff ff       	call   11a0 <exit@plt>
    1af0:	48 8b 05 29 38 00 00 	mov    0x3829(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1af7:	48 89 c7             	mov    %rax,%rdi
    1afa:	e8 81 f6 ff ff       	call   1180 <atoi@plt>
    1aff:	89 05 1b 36 00 00    	mov    %eax,0x361b(%rip)        # 5120 <repetitions>
    1b05:	e9 c7 01 00 00       	jmp    1cd1 <argments+0x2cc>
    1b0a:	48 8b 05 0f 38 00 00 	mov    0x380f(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1b11:	48 89 c6             	mov    %rax,%rsi
    1b14:	48 8d 05 87 15 00 00 	lea    0x1587(%rip),%rax        # 30a2 <_IO_stdin_used+0xa2>
    1b1b:	48 89 c7             	mov    %rax,%rdi
    1b1e:	b8 00 00 00 00       	mov    $0x0,%eax
    1b23:	e8 88 f5 ff ff       	call   10b0 <printf@plt>
    1b28:	48 8b 05 f1 37 00 00 	mov    0x37f1(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1b2f:	48 89 c7             	mov    %rax,%rdi
    1b32:	e8 49 f5 ff ff       	call   1080 <strlen@plt>
    1b37:	48 3d fe 00 00 00    	cmp    $0xfe,%rax
    1b3d:	76 19                	jbe    1b58 <argments+0x153>
    1b3f:	48 8d 05 5f 15 00 00 	lea    0x155f(%rip),%rax        # 30a5 <_IO_stdin_used+0xa5>
    1b46:	48 89 c7             	mov    %rax,%rdi
    1b49:	e8 e2 f4 ff ff       	call   1030 <puts@plt>
    1b4e:	bf 01 00 00 00       	mov    $0x1,%edi
    1b53:	e8 48 f6 ff ff       	call   11a0 <exit@plt>
    1b58:	48 8b 05 c1 37 00 00 	mov    0x37c1(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1b5f:	48 89 c2             	mov    %rax,%rdx
    1b62:	48 8d 05 39 15 00 00 	lea    0x1539(%rip),%rax        # 30a2 <_IO_stdin_used+0xa2>
    1b69:	48 89 c6             	mov    %rax,%rsi
    1b6c:	48 8d 05 cd 35 00 00 	lea    0x35cd(%rip),%rax        # 5140 <output_fname>
    1b73:	48 89 c7             	mov    %rax,%rdi
    1b76:	b8 00 00 00 00       	mov    $0x0,%eax
    1b7b:	e8 10 f6 ff ff       	call   1190 <sprintf@plt>
    1b80:	c6 05 a3 37 00 00 01 	movb   $0x1,0x37a3(%rip)        # 532a <produce_output>
    1b87:	e9 45 01 00 00       	jmp    1cd1 <argments+0x2cc>
    1b8c:	c6 05 96 37 00 00 01 	movb   $0x1,0x3796(%rip)        # 5329 <show_progress>
    1b93:	e9 39 01 00 00       	jmp    1cd1 <argments+0x2cc>
    1b98:	48 8b 05 81 37 00 00 	mov    0x3781(%rip),%rax        # 5320 <optarg@@GLIBC_2.2.5>
    1b9f:	48 89 c7             	mov    %rax,%rdi
    1ba2:	e8 d9 f4 ff ff       	call   1080 <strlen@plt>
    1ba7:	48 3d fe 00 00 00    	cmp    $0xfe,%rax
    1bad:	76 19                	jbe    1bc8 <argments+0x1c3>
    1baf:	48 8d 05 08 15 00 00 	lea    0x1508(%rip),%rax        # 30be <_IO_stdin_used+0xbe>
    1bb6:	48 89 c7             	mov    %rax,%rdi
    1bb9:	e8 72 f4 ff ff       	call   1030 <puts@plt>
    1bbe:	bf 01 00 00 00       	mov    $0x1,%edi
    1bc3:	e8 d8 f5 ff ff       	call   11a0 <exit@plt>
    1bc8:	48 8b 15 51 37 00 00 	mov    0x3751(%rip),%rdx        # 5320 <optarg@@GLIBC_2.2.5>
    1bcf:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    1bd6:	48 8d 0d c5 14 00 00 	lea    0x14c5(%rip),%rcx        # 30a2 <_IO_stdin_used+0xa2>
    1bdd:	48 89 ce             	mov    %rcx,%rsi
    1be0:	48 89 c7             	mov    %rax,%rdi
    1be3:	b8 00 00 00 00       	mov    $0x0,%eax
    1be8:	e8 a3 f5 ff ff       	call   1190 <sprintf@plt>
    1bed:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    1bf4:	48 8d 15 d9 14 00 00 	lea    0x14d9(%rip),%rdx        # 30d4 <_IO_stdin_used+0xd4>
    1bfb:	48 89 d6             	mov    %rdx,%rsi
    1bfe:	48 89 c7             	mov    %rax,%rdi
    1c01:	e8 6a f5 ff ff       	call   1170 <strtok@plt>
    1c06:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1c0e:	ba 0a 00 00 00       	mov    $0xa,%edx
    1c13:	be 00 00 00 00       	mov    $0x0,%esi
    1c18:	48 89 c7             	mov    %rax,%rdi
    1c1b:	e8 e0 f4 ff ff       	call   1100 <strtol@plt>
    1c20:	48 89 05 01 35 00 00 	mov    %rax,0x3501(%rip)        # 5128 <columns>
    1c27:	48 8d 05 a6 14 00 00 	lea    0x14a6(%rip),%rax        # 30d4 <_IO_stdin_used+0xd4>
    1c2e:	48 89 c6             	mov    %rax,%rsi
    1c31:	bf 00 00 00 00       	mov    $0x0,%edi
    1c36:	e8 35 f5 ff ff       	call   1170 <strtok@plt>
    1c3b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1c3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1c43:	ba 0a 00 00 00       	mov    $0xa,%edx
    1c48:	be 00 00 00 00       	mov    $0x0,%esi
    1c4d:	48 89 c7             	mov    %rax,%rdi
    1c50:	e8 ab f4 ff ff       	call   1100 <strtol@plt>
    1c55:	48 89 05 d4 34 00 00 	mov    %rax,0x34d4(%rip)        # 5130 <rows>
    1c5c:	eb 73                	jmp    1cd1 <argments+0x2cc>
    1c5e:	48 8d 05 73 14 00 00 	lea    0x1473(%rip),%rax        # 30d8 <_IO_stdin_used+0xd8>
    1c65:	48 89 c7             	mov    %rax,%rdi
    1c68:	e8 c3 f3 ff ff       	call   1030 <puts@plt>
    1c6d:	48 8d 05 9c 14 00 00 	lea    0x149c(%rip),%rax        # 3110 <_IO_stdin_used+0x110>
    1c74:	48 89 c7             	mov    %rax,%rdi
    1c77:	e8 b4 f3 ff ff       	call   1030 <puts@plt>
    1c7c:	48 8d 05 ed 14 00 00 	lea    0x14ed(%rip),%rax        # 3170 <_IO_stdin_used+0x170>
    1c83:	48 89 c7             	mov    %rax,%rdi
    1c86:	e8 a5 f3 ff ff       	call   1030 <puts@plt>
    1c8b:	48 8d 05 1e 15 00 00 	lea    0x151e(%rip),%rax        # 31b0 <_IO_stdin_used+0x1b0>
    1c92:	48 89 c7             	mov    %rax,%rdi
    1c95:	e8 96 f3 ff ff       	call   1030 <puts@plt>
    1c9a:	48 8d 05 5f 15 00 00 	lea    0x155f(%rip),%rax        # 3200 <_IO_stdin_used+0x200>
    1ca1:	48 89 c7             	mov    %rax,%rdi
    1ca4:	e8 87 f3 ff ff       	call   1030 <puts@plt>
    1ca9:	48 8d 05 98 15 00 00 	lea    0x1598(%rip),%rax        # 3248 <_IO_stdin_used+0x248>
    1cb0:	48 89 c7             	mov    %rax,%rdi
    1cb3:	e8 78 f3 ff ff       	call   1030 <puts@plt>
    1cb8:	48 8d 05 e9 15 00 00 	lea    0x15e9(%rip),%rax        # 32a8 <_IO_stdin_used+0x2a8>
    1cbf:	48 89 c7             	mov    %rax,%rdi
    1cc2:	e8 69 f3 ff ff       	call   1030 <puts@plt>
    1cc7:	bf 00 00 00 00       	mov    $0x0,%edi
    1ccc:	e8 cf f4 ff ff       	call   11a0 <exit@plt>
    1cd1:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
    1cd8:	8b 85 ec fe ff ff    	mov    -0x114(%rbp),%eax
    1cde:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    1ce4:	48 8d 15 55 35 00 00 	lea    0x3555(%rip),%rdx        # 5240 <long_options>
    1ceb:	48 89 d1             	mov    %rdx,%rcx
    1cee:	48 8d 15 09 16 00 00 	lea    0x1609(%rip),%rdx        # 32fe <_IO_stdin_used+0x2fe>
    1cf5:	89 c7                	mov    %eax,%edi
    1cf7:	e8 a4 f3 ff ff       	call   10a0 <getopt_long@plt>
    1cfc:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1cff:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    1d03:	0f 85 19 fd ff ff    	jne    1a22 <argments+0x1d>
    1d09:	90                   	nop
    1d0a:	c9                   	leave  
    1d0b:	c3                   	ret    

0000000000001d0c <main>:
    1d0c:	55                   	push   %rbp
    1d0d:	48 89 e5             	mov    %rsp,%rbp
    1d10:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1d17:	89 bd 7c ff ff ff    	mov    %edi,-0x84(%rbp)
    1d1d:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    1d24:	be 01 00 00 00       	mov    $0x1,%esi
    1d29:	bf 04 00 00 00       	mov    $0x4,%edi
    1d2e:	e8 0d f3 ff ff       	call   1040 <omp_set_schedule@plt>
    1d33:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    1d3a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    1d40:	48 89 d6             	mov    %rdx,%rsi
    1d43:	89 c7                	mov    %eax,%edi
    1d45:	e8 bb fc ff ff       	call   1a05 <argments>
    1d4a:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
    1d4e:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    1d52:	48 89 d6             	mov    %rdx,%rsi
    1d55:	48 89 c7             	mov    %rax,%rdi
    1d58:	e8 e3 f3 ff ff       	call   1140 <omp_get_schedule@plt>
    1d5d:	48 8d 05 30 16 00 00 	lea    0x1630(%rip),%rax        # 3394 <_IO_stdin_used+0x394>
    1d64:	48 89 c7             	mov    %rax,%rdi
    1d67:	e8 c4 f2 ff ff       	call   1030 <puts@plt>
    1d6c:	e8 4f f4 ff ff       	call   11c0 <omp_get_thread_limit@plt>
    1d71:	89 c2                	mov    %eax,%edx
    1d73:	8b 05 a7 33 00 00    	mov    0x33a7(%rip),%eax        # 5120 <repetitions>
    1d79:	89 c6                	mov    %eax,%esi
    1d7b:	48 8d 05 36 16 00 00 	lea    0x1636(%rip),%rax        # 33b8 <_IO_stdin_used+0x3b8>
    1d82:	48 89 c7             	mov    %rax,%rdi
    1d85:	b8 00 00 00 00       	mov    $0x0,%eax
    1d8a:	e8 21 f3 ff ff       	call   10b0 <printf@plt>
    1d8f:	8b 55 88             	mov    -0x78(%rbp),%edx
    1d92:	8b 45 8c             	mov    -0x74(%rbp),%eax
    1d95:	89 c6                	mov    %eax,%esi
    1d97:	48 8d 05 4a 16 00 00 	lea    0x164a(%rip),%rax        # 33e8 <_IO_stdin_used+0x3e8>
    1d9e:	48 89 c7             	mov    %rax,%rdi
    1da1:	b8 00 00 00 00       	mov    $0x0,%eax
    1da6:	e8 05 f3 ff ff       	call   10b0 <printf@plt>
    1dab:	48 8b 15 7e 33 00 00 	mov    0x337e(%rip),%rdx        # 5130 <rows>
    1db2:	48 8b 05 6f 33 00 00 	mov    0x336f(%rip),%rax        # 5128 <columns>
    1db9:	48 89 c6             	mov    %rax,%rsi
    1dbc:	48 8d 05 3d 16 00 00 	lea    0x163d(%rip),%rax        # 3400 <_IO_stdin_used+0x400>
    1dc3:	48 89 c7             	mov    %rax,%rdi
    1dc6:	b8 00 00 00 00       	mov    $0x0,%eax
    1dcb:	e8 e0 f2 ff ff       	call   10b0 <printf@plt>
    1dd0:	48 8d 05 4e 16 00 00 	lea    0x164e(%rip),%rax        # 3425 <_IO_stdin_used+0x425>
    1dd7:	48 89 c7             	mov    %rax,%rdi
    1dda:	e8 51 f2 ff ff       	call   1030 <puts@plt>
    1ddf:	48 8b 15 42 33 00 00 	mov    0x3342(%rip),%rdx        # 5128 <columns>
    1de6:	48 8b 05 43 33 00 00 	mov    0x3343(%rip),%rax        # 5130 <rows>
    1ded:	48 0f af c2          	imul   %rdx,%rax
    1df1:	48 89 c7             	mov    %rax,%rdi
    1df4:	e8 27 f3 ff ff       	call   1120 <malloc@plt>
    1df9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1dfd:	48 8b 15 24 33 00 00 	mov    0x3324(%rip),%rdx        # 5128 <columns>
    1e04:	48 8b 05 25 33 00 00 	mov    0x3325(%rip),%rax        # 5130 <rows>
    1e0b:	48 0f af c2          	imul   %rdx,%rax
    1e0f:	48 89 c7             	mov    %rax,%rdi
    1e12:	e8 09 f3 ff ff       	call   1120 <malloc@plt>
    1e17:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1e1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1e1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1e23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1e27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1e2b:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1e32:	00 
    1e33:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e37:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
    1e3c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e40:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    1e45:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e49:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    1e4e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e52:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
    1e57:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e5b:	f2 0f 11 45 a0       	movsd  %xmm0,-0x60(%rbp)
    1e60:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1e64:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
    1e69:	e8 e2 f1 ff ff       	call   1050 <clock@plt>
    1e6e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1e72:	e8 f9 f1 ff ff       	call   1070 <omp_get_wtime@plt>
    1e77:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1e7c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1e80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1e84:	48 89 c7             	mov    %rax,%rdi
    1e87:	e8 4d f4 ff ff       	call   12d9 <field_initializer>
    1e8c:	e8 df f1 ff ff       	call   1070 <omp_get_wtime@plt>
    1e91:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1e96:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1e9b:	f2 0f 5c 45 a8       	subsd  -0x58(%rbp),%xmm0
    1ea0:	f2 0f 11 45 a0       	movsd  %xmm0,-0x60(%rbp)
    1ea5:	e8 a6 f1 ff ff       	call   1050 <clock@plt>
    1eaa:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    1eae:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1eb2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1eb6:	f2 48 0f 2a 45 98    	cvtsi2sdq -0x68(%rbp),%xmm0
    1ebc:	f2 0f 10 0d b4 16 00 	movsd  0x16b4(%rip),%xmm1        # 3578 <_IO_stdin_used+0x578>
    1ec3:	00 
    1ec4:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1ec8:	f2 0f 11 45 b0       	movsd  %xmm0,-0x50(%rbp)
    1ecd:	0f b6 05 56 34 00 00 	movzbl 0x3456(%rip),%eax        # 532a <produce_output>
    1ed4:	84 c0                	test   %al,%al
    1ed6:	74 4b                	je     1f23 <main+0x217>
    1ed8:	e8 73 f1 ff ff       	call   1050 <clock@plt>
    1edd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1ee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ee5:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1eea:	48 89 c7             	mov    %rax,%rdi
    1eed:	e8 bf f9 ff ff       	call   18b1 <write_pbm_file>
    1ef2:	e8 59 f1 ff ff       	call   1050 <clock@plt>
    1ef7:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    1efb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1eff:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1f03:	f2 48 0f 2a 45 98    	cvtsi2sdq -0x68(%rbp),%xmm0
    1f09:	f2 0f 10 0d 67 16 00 	movsd  0x1667(%rip),%xmm1        # 3578 <_IO_stdin_used+0x578>
    1f10:	00 
    1f11:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1f15:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
    1f1a:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1f1e:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    1f23:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1f2a:	e9 53 01 00 00       	jmp    2082 <main+0x376>
    1f2f:	e8 1c f1 ff ff       	call   1050 <clock@plt>
    1f34:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1f38:	e8 33 f1 ff ff       	call   1070 <omp_get_wtime@plt>
    1f3d:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1f42:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1f46:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f4e:	48 89 d6             	mov    %rdx,%rsi
    1f51:	48 89 c7             	mov    %rax,%rdi
    1f54:	e8 dc f8 ff ff       	call   1835 <calculate_next_gen>
    1f59:	e8 12 f1 ff ff       	call   1070 <omp_get_wtime@plt>
    1f5e:	66 48 0f 7e c0       	movq   %xmm0,%rax
    1f63:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1f68:	f2 0f 5c 45 a8       	subsd  -0x58(%rbp),%xmm0
    1f6d:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
    1f72:	e8 d9 f0 ff ff       	call   1050 <clock@plt>
    1f77:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    1f7b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1f7f:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
    1f84:	f2 0f 58 45 a8       	addsd  -0x58(%rbp),%xmm0
    1f89:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
    1f8e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1f92:	f2 48 0f 2a 45 98    	cvtsi2sdq -0x68(%rbp),%xmm0
    1f98:	f2 0f 10 0d d8 15 00 	movsd  0x15d8(%rip),%xmm1        # 3578 <_IO_stdin_used+0x578>
    1f9f:	00 
    1fa0:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1fa4:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
    1fa9:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1fad:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    1fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1fb6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1fba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1fbe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1fc2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1fc6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1fca:	0f b6 05 58 33 00 00 	movzbl 0x3358(%rip),%eax        # 5329 <show_progress>
    1fd1:	84 c0                	test   %al,%al
    1fd3:	74 53                	je     2028 <main+0x31c>
    1fd5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1fd8:	83 c0 01             	add    $0x1,%eax
    1fdb:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1fdf:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    1fe3:	f2 0f 10 05 95 15 00 	movsd  0x1595(%rip),%xmm0        # 3580 <_IO_stdin_used+0x580>
    1fea:	00 
    1feb:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    1fef:	8b 05 2b 31 00 00    	mov    0x312b(%rip),%eax        # 5120 <repetitions>
    1ff5:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1ff9:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    1ffd:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    2001:	f2 0f 11 45 90       	movsd  %xmm0,-0x70(%rbp)
    2006:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    200a:	be 25 00 00 00       	mov    $0x25,%esi
    200f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2014:	48 8d 05 1a 14 00 00 	lea    0x141a(%rip),%rax        # 3435 <_IO_stdin_used+0x435>
    201b:	48 89 c7             	mov    %rax,%rdi
    201e:	b8 01 00 00 00       	mov    $0x1,%eax
    2023:	e8 88 f0 ff ff       	call   10b0 <printf@plt>
    2028:	0f b6 05 fb 32 00 00 	movzbl 0x32fb(%rip),%eax        # 532a <produce_output>
    202f:	84 c0                	test   %al,%al
    2031:	74 4b                	je     207e <main+0x372>
    2033:	e8 18 f0 ff ff       	call   1050 <clock@plt>
    2038:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    203c:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    203f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2043:	89 d6                	mov    %edx,%esi
    2045:	48 89 c7             	mov    %rax,%rdi
    2048:	e8 64 f8 ff ff       	call   18b1 <write_pbm_file>
    204d:	e8 fe ef ff ff       	call   1050 <clock@plt>
    2052:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    2056:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    205a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    205e:	f2 48 0f 2a 45 98    	cvtsi2sdq -0x68(%rbp),%xmm0
    2064:	f2 0f 10 0d 0c 15 00 	movsd  0x150c(%rip),%xmm1        # 3578 <_IO_stdin_used+0x578>
    206b:	00 
    206c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    2070:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
    2075:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2079:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    207e:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
    2082:	8b 05 98 30 00 00    	mov    0x3098(%rip),%eax        # 5120 <repetitions>
    2088:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    208b:	0f 8c 9e fe ff ff    	jl     1f2f <main+0x223>
    2091:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    2095:	66 48 0f 6e c0       	movq   %rax,%xmm0
    209a:	48 8d 05 9f 13 00 00 	lea    0x139f(%rip),%rax        # 3440 <_IO_stdin_used+0x440>
    20a1:	48 89 c7             	mov    %rax,%rdi
    20a4:	b8 01 00 00 00       	mov    $0x1,%eax
    20a9:	e8 02 f0 ff ff       	call   10b0 <printf@plt>
    20ae:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    20b2:	66 48 0f 6e c0       	movq   %rax,%xmm0
    20b7:	48 8d 05 ca 13 00 00 	lea    0x13ca(%rip),%rax        # 3488 <_IO_stdin_used+0x488>
    20be:	48 89 c7             	mov    %rax,%rdi
    20c1:	b8 01 00 00 00       	mov    $0x1,%eax
    20c6:	e8 e5 ef ff ff       	call   10b0 <printf@plt>
    20cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    20cf:	66 48 0f 6e c0       	movq   %rax,%xmm0
    20d4:	48 8d 05 ed 13 00 00 	lea    0x13ed(%rip),%rax        # 34c8 <_IO_stdin_used+0x4c8>
    20db:	48 89 c7             	mov    %rax,%rdi
    20de:	b8 01 00 00 00       	mov    $0x1,%eax
    20e3:	e8 c8 ef ff ff       	call   10b0 <printf@plt>
    20e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    20ec:	66 48 0f 6e c0       	movq   %rax,%xmm0
    20f1:	48 8d 05 10 14 00 00 	lea    0x1410(%rip),%rax        # 3508 <_IO_stdin_used+0x508>
    20f8:	48 89 c7             	mov    %rax,%rdi
    20fb:	b8 01 00 00 00       	mov    $0x1,%eax
    2100:	e8 ab ef ff ff       	call   10b0 <printf@plt>
    2105:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2109:	66 48 0f 6e c0       	movq   %rax,%xmm0
    210e:	48 8d 05 2b 14 00 00 	lea    0x142b(%rip),%rax        # 3540 <_IO_stdin_used+0x540>
    2115:	48 89 c7             	mov    %rax,%rdi
    2118:	b8 01 00 00 00       	mov    $0x1,%eax
    211d:	e8 8e ef ff ff       	call   10b0 <printf@plt>
    2122:	48 8d 05 46 14 00 00 	lea    0x1446(%rip),%rax        # 356f <_IO_stdin_used+0x56f>
    2129:	48 89 c7             	mov    %rax,%rdi
    212c:	e8 ff ee ff ff       	call   1030 <puts@plt>
    2131:	bf 00 00 00 00       	mov    $0x0,%edi
    2136:	e8 65 f0 ff ff       	call   11a0 <exit@plt>

000000000000213b <field_initializer._omp_fn.0>:
    213b:	55                   	push   %rbp
    213c:	48 89 e5             	mov    %rsp,%rbp
    213f:	48 83 ec 40          	sub    $0x40,%rsp
    2143:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2147:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    214b:	48 8b 00             	mov    (%rax),%rax
    214e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2152:	e8 d9 ef ff ff       	call   1130 <pthread_self@plt>
    2157:	89 45 f4             	mov    %eax,-0xc(%rbp)
    215a:	bf 00 00 00 00       	mov    $0x0,%edi
    215f:	e8 ac ef ff ff       	call   1110 <time@plt>
    2164:	89 c2                	mov    %eax,%edx
    2166:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2169:	01 d0                	add    %edx,%eax
    216b:	89 45 dc             	mov    %eax,-0x24(%rbp)
    216e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2172:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2176:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    217a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    217e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2182:	b9 00 00 00 00       	mov    $0x0,%ecx
    2187:	ba 00 00 00 00       	mov    $0x0,%edx
    218c:	48 89 c6             	mov    %rax,%rsi
    218f:	48 8d 05 0a 00 00 00 	lea    0xa(%rip),%rax        # 21a0 <field_initializer._omp_fn.1>
    2196:	48 89 c7             	mov    %rax,%rdi
    2199:	e8 32 f0 ff ff       	call   11d0 <GOMP_parallel@plt>
    219e:	c9                   	leave  
    219f:	c3                   	ret    

00000000000021a0 <field_initializer._omp_fn.1>:
    21a0:	55                   	push   %rbp
    21a1:	48 89 e5             	mov    %rsp,%rbp
    21a4:	53                   	push   %rbx
    21a5:	48 83 ec 38          	sub    $0x38,%rsp
    21a9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    21ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    21b1:	48 8b 00             	mov    (%rax),%rax
    21b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    21b8:	48 8b 05 71 2f 00 00 	mov    0x2f71(%rip),%rax        # 5130 <rows>
    21bf:	48 98                	cltq   
    21c1:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    21c5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    21c9:	49 89 c8             	mov    %rcx,%r8
    21cc:	48 89 d1             	mov    %rdx,%rcx
    21cf:	ba 01 00 00 00       	mov    $0x1,%edx
    21d4:	48 89 c6             	mov    %rax,%rsi
    21d7:	bf 00 00 00 00       	mov    $0x0,%edi
    21dc:	e8 df ee ff ff       	call   10c0 <GOMP_loop_maybe_nonmonotonic_runtime_start@plt>
    21e1:	84 c0                	test   %al,%al
    21e3:	0f 84 90 00 00 00    	je     2279 <field_initializer._omp_fn.1+0xd9>
    21e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    21ed:	89 45 ec             	mov    %eax,-0x14(%rbp)
    21f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    21f4:	89 c3                	mov    %eax,%ebx
    21f6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    21fd:	90                   	nop
    21fe:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2201:	48 63 d0             	movslq %eax,%rdx
    2204:	48 8b 05 1d 2f 00 00 	mov    0x2f1d(%rip),%rax        # 5128 <columns>
    220b:	48 39 c2             	cmp    %rax,%rdx
    220e:	72 22                	jb     2232 <field_initializer._omp_fn.1+0x92>
    2210:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2214:	39 5d ec             	cmp    %ebx,-0x14(%rbp)
    2217:	7c dd                	jl     21f6 <field_initializer._omp_fn.1+0x56>
    2219:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    221d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2221:	48 89 d6             	mov    %rdx,%rsi
    2224:	48 89 c7             	mov    %rax,%rdi
    2227:	e8 24 ef ff ff       	call   1150 <GOMP_loop_maybe_nonmonotonic_runtime_next@plt>
    222c:	84 c0                	test   %al,%al
    222e:	75 b9                	jne    21e9 <field_initializer._omp_fn.1+0x49>
    2230:	eb 47                	jmp    2279 <field_initializer._omp_fn.1+0xd9>
    2232:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2236:	48 8b 40 08          	mov    0x8(%rax),%rax
    223a:	48 89 c7             	mov    %rax,%rdi
    223d:	e8 4e ee ff ff       	call   1090 <rand_r@plt>
    2242:	99                   	cltd   
    2243:	c1 ea 1f             	shr    $0x1f,%edx
    2246:	01 d0                	add    %edx,%eax
    2248:	83 e0 01             	and    $0x1,%eax
    224b:	29 d0                	sub    %edx,%eax
    224d:	89 c1                	mov    %eax,%ecx
    224f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2252:	48 63 d0             	movslq %eax,%rdx
    2255:	48 8b 05 cc 2e 00 00 	mov    0x2ecc(%rip),%rax        # 5128 <columns>
    225c:	48 0f af d0          	imul   %rax,%rdx
    2260:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2263:	48 98                	cltq   
    2265:	48 01 c2             	add    %rax,%rdx
    2268:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    226c:	48 01 d0             	add    %rdx,%rax
    226f:	89 ca                	mov    %ecx,%edx
    2271:	88 10                	mov    %dl,(%rax)
    2273:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    2277:	eb 85                	jmp    21fe <field_initializer._omp_fn.1+0x5e>
    2279:	e8 52 ee ff ff       	call   10d0 <GOMP_loop_end_nowait@plt>
    227e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2282:	c9                   	leave  
    2283:	c3                   	ret    

0000000000002284 <calculate_left_right._omp_fn.0>:
    2284:	55                   	push   %rbp
    2285:	48 89 e5             	mov    %rsp,%rbp
    2288:	48 83 ec 40          	sub    $0x40,%rsp
    228c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2290:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2294:	48 8b 40 08          	mov    0x8(%rax),%rax
    2298:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    229c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    22a0:	48 8b 00             	mov    (%rax),%rax
    22a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    22a7:	48 8b 05 82 2e 00 00 	mov    0x2e82(%rip),%rax        # 5130 <rows>
    22ae:	48 83 e8 01          	sub    $0x1,%rax
    22b2:	48 98                	cltq   
    22b4:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    22b8:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    22bc:	49 89 c8             	mov    %rcx,%r8
    22bf:	48 89 d1             	mov    %rdx,%rcx
    22c2:	ba 01 00 00 00       	mov    $0x1,%edx
    22c7:	48 89 c6             	mov    %rax,%rsi
    22ca:	bf 01 00 00 00       	mov    $0x1,%edi
    22cf:	e8 ec ed ff ff       	call   10c0 <GOMP_loop_maybe_nonmonotonic_runtime_start@plt>
    22d4:	84 c0                	test   %al,%al
    22d6:	0f 84 fc 02 00 00    	je     25d8 <calculate_left_right._omp_fn.0+0x354>
    22dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    22e0:	89 45 fc             	mov    %eax,-0x4(%rbp)
    22e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    22e7:	89 c1                	mov    %eax,%ecx
    22e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    22ec:	48 63 d0             	movslq %eax,%rdx
    22ef:	48 8b 05 32 2e 00 00 	mov    0x2e32(%rip),%rax        # 5128 <columns>
    22f6:	48 0f af c2          	imul   %rdx,%rax
    22fa:	48 8d 50 01          	lea    0x1(%rax),%rdx
    22fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2302:	48 01 d0             	add    %rdx,%rax
    2305:	0f b6 30             	movzbl (%rax),%esi
    2308:	8b 45 fc             	mov    -0x4(%rbp),%eax
    230b:	83 e8 01             	sub    $0x1,%eax
    230e:	48 63 d0             	movslq %eax,%rdx
    2311:	48 8b 05 10 2e 00 00 	mov    0x2e10(%rip),%rax        # 5128 <columns>
    2318:	48 0f af d0          	imul   %rax,%rdx
    231c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2320:	48 01 d0             	add    %rdx,%rax
    2323:	0f b6 00             	movzbl (%rax),%eax
    2326:	01 c6                	add    %eax,%esi
    2328:	8b 45 fc             	mov    -0x4(%rbp),%eax
    232b:	83 e8 01             	sub    $0x1,%eax
    232e:	48 63 d0             	movslq %eax,%rdx
    2331:	48 8b 05 f0 2d 00 00 	mov    0x2df0(%rip),%rax        # 5128 <columns>
    2338:	48 0f af c2          	imul   %rdx,%rax
    233c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2340:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2344:	48 01 d0             	add    %rdx,%rax
    2347:	0f b6 00             	movzbl (%rax),%eax
    234a:	01 c6                	add    %eax,%esi
    234c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    234f:	83 c0 01             	add    $0x1,%eax
    2352:	48 63 d0             	movslq %eax,%rdx
    2355:	48 8b 05 cc 2d 00 00 	mov    0x2dcc(%rip),%rax        # 5128 <columns>
    235c:	48 0f af d0          	imul   %rax,%rdx
    2360:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2364:	48 01 d0             	add    %rdx,%rax
    2367:	0f b6 00             	movzbl (%rax),%eax
    236a:	01 c6                	add    %eax,%esi
    236c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    236f:	83 c0 01             	add    $0x1,%eax
    2372:	48 63 d0             	movslq %eax,%rdx
    2375:	48 8b 05 ac 2d 00 00 	mov    0x2dac(%rip),%rax        # 5128 <columns>
    237c:	48 0f af c2          	imul   %rdx,%rax
    2380:	48 8d 50 01          	lea    0x1(%rax),%rdx
    2384:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2388:	48 01 d0             	add    %rdx,%rax
    238b:	0f b6 00             	movzbl (%rax),%eax
    238e:	01 c6                	add    %eax,%esi
    2390:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2393:	48 63 d0             	movslq %eax,%rdx
    2396:	48 8b 05 8b 2d 00 00 	mov    0x2d8b(%rip),%rax        # 5128 <columns>
    239d:	48 0f af c2          	imul   %rdx,%rax
    23a1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    23a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    23a9:	48 01 d0             	add    %rdx,%rax
    23ac:	0f b6 00             	movzbl (%rax),%eax
    23af:	01 c6                	add    %eax,%esi
    23b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    23b4:	83 c0 01             	add    $0x1,%eax
    23b7:	48 63 d0             	movslq %eax,%rdx
    23ba:	48 8b 05 67 2d 00 00 	mov    0x2d67(%rip),%rax        # 5128 <columns>
    23c1:	48 0f af c2          	imul   %rdx,%rax
    23c5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    23c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    23cd:	48 01 d0             	add    %rdx,%rax
    23d0:	0f b6 00             	movzbl (%rax),%eax
    23d3:	01 c6                	add    %eax,%esi
    23d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    23d8:	83 c0 02             	add    $0x2,%eax
    23db:	48 63 d0             	movslq %eax,%rdx
    23de:	48 8b 05 43 2d 00 00 	mov    0x2d43(%rip),%rax        # 5128 <columns>
    23e5:	48 0f af c2          	imul   %rdx,%rax
    23e9:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    23ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    23f1:	48 01 d0             	add    %rdx,%rax
    23f4:	0f b6 00             	movzbl (%rax),%eax
    23f7:	01 f0                	add    %esi,%eax
    23f9:	88 45 e7             	mov    %al,-0x19(%rbp)
    23fc:	80 7d e7 03          	cmpb   $0x3,-0x19(%rbp)
    2400:	0f 94 c0             	sete   %al
    2403:	89 c6                	mov    %eax,%esi
    2405:	80 7d e7 02          	cmpb   $0x2,-0x19(%rbp)
    2409:	0f 94 c0             	sete   %al
    240c:	89 c7                	mov    %eax,%edi
    240e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2411:	48 63 d0             	movslq %eax,%rdx
    2414:	48 8b 05 0d 2d 00 00 	mov    0x2d0d(%rip),%rax        # 5128 <columns>
    241b:	48 0f af d0          	imul   %rax,%rdx
    241f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2423:	48 01 d0             	add    %rdx,%rax
    2426:	0f b6 00             	movzbl (%rax),%eax
    2429:	21 f8                	and    %edi,%eax
    242b:	09 c6                	or     %eax,%esi
    242d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2430:	48 63 d0             	movslq %eax,%rdx
    2433:	48 8b 05 ee 2c 00 00 	mov    0x2cee(%rip),%rax        # 5128 <columns>
    243a:	48 0f af d0          	imul   %rax,%rdx
    243e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2442:	48 01 d0             	add    %rdx,%rax
    2445:	89 f2                	mov    %esi,%edx
    2447:	88 10                	mov    %dl,(%rax)
    2449:	8b 45 fc             	mov    -0x4(%rbp),%eax
    244c:	83 c0 01             	add    $0x1,%eax
    244f:	48 63 d0             	movslq %eax,%rdx
    2452:	48 8b 05 cf 2c 00 00 	mov    0x2ccf(%rip),%rax        # 5128 <columns>
    2459:	48 0f af c2          	imul   %rdx,%rax
    245d:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    2461:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2465:	48 01 d0             	add    %rdx,%rax
    2468:	0f b6 30             	movzbl (%rax),%esi
    246b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    246e:	48 63 d0             	movslq %eax,%rdx
    2471:	48 8b 05 b0 2c 00 00 	mov    0x2cb0(%rip),%rax        # 5128 <columns>
    2478:	48 0f af c2          	imul   %rdx,%rax
    247c:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    2480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2484:	48 01 d0             	add    %rdx,%rax
    2487:	0f b6 00             	movzbl (%rax),%eax
    248a:	01 c6                	add    %eax,%esi
    248c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    248f:	48 63 d0             	movslq %eax,%rdx
    2492:	48 8b 05 8f 2c 00 00 	mov    0x2c8f(%rip),%rax        # 5128 <columns>
    2499:	48 0f af c2          	imul   %rdx,%rax
    249d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    24a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24a5:	48 01 d0             	add    %rdx,%rax
    24a8:	0f b6 00             	movzbl (%rax),%eax
    24ab:	01 c6                	add    %eax,%esi
    24ad:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24b0:	83 c0 02             	add    $0x2,%eax
    24b3:	48 63 d0             	movslq %eax,%rdx
    24b6:	48 8b 05 6b 2c 00 00 	mov    0x2c6b(%rip),%rax        # 5128 <columns>
    24bd:	48 0f af c2          	imul   %rdx,%rax
    24c1:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    24c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24c9:	48 01 d0             	add    %rdx,%rax
    24cc:	0f b6 00             	movzbl (%rax),%eax
    24cf:	01 c6                	add    %eax,%esi
    24d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24d4:	83 c0 02             	add    $0x2,%eax
    24d7:	48 63 d0             	movslq %eax,%rdx
    24da:	48 8b 05 47 2c 00 00 	mov    0x2c47(%rip),%rax        # 5128 <columns>
    24e1:	48 0f af c2          	imul   %rdx,%rax
    24e5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    24e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    24ed:	48 01 d0             	add    %rdx,%rax
    24f0:	0f b6 00             	movzbl (%rax),%eax
    24f3:	01 c6                	add    %eax,%esi
    24f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    24f8:	83 e8 01             	sub    $0x1,%eax
    24fb:	48 63 d0             	movslq %eax,%rdx
    24fe:	48 8b 05 23 2c 00 00 	mov    0x2c23(%rip),%rax        # 5128 <columns>
    2505:	48 0f af d0          	imul   %rax,%rdx
    2509:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    250d:	48 01 d0             	add    %rdx,%rax
    2510:	0f b6 00             	movzbl (%rax),%eax
    2513:	01 c6                	add    %eax,%esi
    2515:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2518:	48 63 d0             	movslq %eax,%rdx
    251b:	48 8b 05 06 2c 00 00 	mov    0x2c06(%rip),%rax        # 5128 <columns>
    2522:	48 0f af d0          	imul   %rax,%rdx
    2526:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    252a:	48 01 d0             	add    %rdx,%rax
    252d:	0f b6 00             	movzbl (%rax),%eax
    2530:	01 c6                	add    %eax,%esi
    2532:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2535:	83 c0 01             	add    $0x1,%eax
    2538:	48 63 d0             	movslq %eax,%rdx
    253b:	48 8b 05 e6 2b 00 00 	mov    0x2be6(%rip),%rax        # 5128 <columns>
    2542:	48 0f af d0          	imul   %rax,%rdx
    2546:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    254a:	48 01 d0             	add    %rdx,%rax
    254d:	0f b6 00             	movzbl (%rax),%eax
    2550:	01 f0                	add    %esi,%eax
    2552:	88 45 e6             	mov    %al,-0x1a(%rbp)
    2555:	80 7d e6 03          	cmpb   $0x3,-0x1a(%rbp)
    2559:	0f 94 c0             	sete   %al
    255c:	89 c6                	mov    %eax,%esi
    255e:	80 7d e6 02          	cmpb   $0x2,-0x1a(%rbp)
    2562:	0f 94 c0             	sete   %al
    2565:	89 c7                	mov    %eax,%edi
    2567:	8b 45 fc             	mov    -0x4(%rbp),%eax
    256a:	83 c0 01             	add    $0x1,%eax
    256d:	48 63 d0             	movslq %eax,%rdx
    2570:	48 8b 05 b1 2b 00 00 	mov    0x2bb1(%rip),%rax        # 5128 <columns>
    2577:	48 0f af c2          	imul   %rdx,%rax
    257b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    257f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2583:	48 01 d0             	add    %rdx,%rax
    2586:	0f b6 00             	movzbl (%rax),%eax
    2589:	21 f8                	and    %edi,%eax
    258b:	09 c6                	or     %eax,%esi
    258d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2590:	83 c0 01             	add    $0x1,%eax
    2593:	48 63 d0             	movslq %eax,%rdx
    2596:	48 8b 05 8b 2b 00 00 	mov    0x2b8b(%rip),%rax        # 5128 <columns>
    259d:	48 0f af c2          	imul   %rdx,%rax
    25a1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    25a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    25a9:	48 01 d0             	add    %rdx,%rax
    25ac:	89 f2                	mov    %esi,%edx
    25ae:	88 10                	mov    %dl,(%rax)
    25b0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    25b4:	39 4d fc             	cmp    %ecx,-0x4(%rbp)
    25b7:	0f 8c 2c fd ff ff    	jl     22e9 <calculate_left_right._omp_fn.0+0x65>
    25bd:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    25c1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    25c5:	48 89 d6             	mov    %rdx,%rsi
    25c8:	48 89 c7             	mov    %rax,%rdi
    25cb:	e8 80 eb ff ff       	call   1150 <GOMP_loop_maybe_nonmonotonic_runtime_next@plt>
    25d0:	84 c0                	test   %al,%al
    25d2:	0f 85 04 fd ff ff    	jne    22dc <calculate_left_right._omp_fn.0+0x58>
    25d8:	e8 f3 ea ff ff       	call   10d0 <GOMP_loop_end_nowait@plt>
    25dd:	c9                   	leave  
    25de:	c3                   	ret    

00000000000025df <calculate_top_bottom._omp_fn.0>:
    25df:	55                   	push   %rbp
    25e0:	48 89 e5             	mov    %rsp,%rbp
    25e3:	48 83 ec 40          	sub    $0x40,%rsp
    25e7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    25eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25ef:	48 8b 40 08          	mov    0x8(%rax),%rax
    25f3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    25f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    25fb:	48 8b 00             	mov    (%rax),%rax
    25fe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2602:	48 8b 05 1f 2b 00 00 	mov    0x2b1f(%rip),%rax        # 5128 <columns>
    2609:	48 83 e8 01          	sub    $0x1,%rax
    260d:	48 98                	cltq   
    260f:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    2613:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    2617:	49 89 c8             	mov    %rcx,%r8
    261a:	48 89 d1             	mov    %rdx,%rcx
    261d:	ba 01 00 00 00       	mov    $0x1,%edx
    2622:	48 89 c6             	mov    %rax,%rsi
    2625:	bf 01 00 00 00       	mov    $0x1,%edi
    262a:	e8 91 ea ff ff       	call   10c0 <GOMP_loop_maybe_nonmonotonic_runtime_start@plt>
    262f:	84 c0                	test   %al,%al
    2631:	0f 84 04 03 00 00    	je     293b <calculate_top_bottom._omp_fn.0+0x35c>
    2637:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    263b:	89 45 fc             	mov    %eax,-0x4(%rbp)
    263e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2642:	89 c1                	mov    %eax,%ecx
    2644:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2647:	48 98                	cltq   
    2649:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    264d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2651:	48 01 d0             	add    %rdx,%rax
    2654:	0f b6 10             	movzbl (%rax),%edx
    2657:	8b 45 fc             	mov    -0x4(%rbp),%eax
    265a:	48 98                	cltq   
    265c:	48 8d 70 01          	lea    0x1(%rax),%rsi
    2660:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2664:	48 01 f0             	add    %rsi,%rax
    2667:	0f b6 00             	movzbl (%rax),%eax
    266a:	01 c2                	add    %eax,%edx
    266c:	48 8b 05 b5 2a 00 00 	mov    0x2ab5(%rip),%rax        # 5128 <columns>
    2673:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    2677:	8b 45 fc             	mov    -0x4(%rbp),%eax
    267a:	83 e8 01             	sub    $0x1,%eax
    267d:	48 98                	cltq   
    267f:	48 01 c6             	add    %rax,%rsi
    2682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2686:	48 01 f0             	add    %rsi,%rax
    2689:	0f b6 00             	movzbl (%rax),%eax
    268c:	01 c2                	add    %eax,%edx
    268e:	48 8b 05 93 2a 00 00 	mov    0x2a93(%rip),%rax        # 5128 <columns>
    2695:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    2699:	8b 45 fc             	mov    -0x4(%rbp),%eax
    269c:	48 98                	cltq   
    269e:	48 01 c6             	add    %rax,%rsi
    26a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26a5:	48 01 f0             	add    %rsi,%rax
    26a8:	0f b6 00             	movzbl (%rax),%eax
    26ab:	01 c2                	add    %eax,%edx
    26ad:	48 8b 05 74 2a 00 00 	mov    0x2a74(%rip),%rax        # 5128 <columns>
    26b4:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
    26b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26bb:	83 c0 01             	add    $0x1,%eax
    26be:	48 98                	cltq   
    26c0:	48 01 c6             	add    %rax,%rsi
    26c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26c7:	48 01 f0             	add    %rsi,%rax
    26ca:	0f b6 00             	movzbl (%rax),%eax
    26cd:	8d 34 02             	lea    (%rdx,%rax,1),%esi
    26d0:	48 8b 05 59 2a 00 00 	mov    0x2a59(%rip),%rax        # 5130 <rows>
    26d7:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    26db:	48 8b 05 46 2a 00 00 	mov    0x2a46(%rip),%rax        # 5128 <columns>
    26e2:	48 0f af d0          	imul   %rax,%rdx
    26e6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    26e9:	48 98                	cltq   
    26eb:	48 01 c2             	add    %rax,%rdx
    26ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26f2:	48 01 d0             	add    %rdx,%rax
    26f5:	0f b6 00             	movzbl (%rax),%eax
    26f8:	01 c6                	add    %eax,%esi
    26fa:	48 8b 05 2f 2a 00 00 	mov    0x2a2f(%rip),%rax        # 5130 <rows>
    2701:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2705:	48 8b 05 1c 2a 00 00 	mov    0x2a1c(%rip),%rax        # 5128 <columns>
    270c:	48 0f af d0          	imul   %rax,%rdx
    2710:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2713:	48 98                	cltq   
    2715:	48 01 d0             	add    %rdx,%rax
    2718:	48 8d 50 01          	lea    0x1(%rax),%rdx
    271c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2720:	48 01 d0             	add    %rdx,%rax
    2723:	0f b6 00             	movzbl (%rax),%eax
    2726:	01 c6                	add    %eax,%esi
    2728:	48 8b 05 01 2a 00 00 	mov    0x2a01(%rip),%rax        # 5130 <rows>
    272f:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2733:	48 8b 05 ee 29 00 00 	mov    0x29ee(%rip),%rax        # 5128 <columns>
    273a:	48 0f af d0          	imul   %rax,%rdx
    273e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2741:	48 98                	cltq   
    2743:	48 01 d0             	add    %rdx,%rax
    2746:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    274a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    274e:	48 01 d0             	add    %rdx,%rax
    2751:	0f b6 00             	movzbl (%rax),%eax
    2754:	01 f0                	add    %esi,%eax
    2756:	88 45 e7             	mov    %al,-0x19(%rbp)
    2759:	80 7d e7 03          	cmpb   $0x3,-0x19(%rbp)
    275d:	0f 94 c0             	sete   %al
    2760:	89 c6                	mov    %eax,%esi
    2762:	80 7d e7 02          	cmpb   $0x2,-0x19(%rbp)
    2766:	0f 94 c0             	sete   %al
    2769:	89 c7                	mov    %eax,%edi
    276b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    276e:	48 63 d0             	movslq %eax,%rdx
    2771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2775:	48 01 d0             	add    %rdx,%rax
    2778:	0f b6 00             	movzbl (%rax),%eax
    277b:	21 f8                	and    %edi,%eax
    277d:	09 c6                	or     %eax,%esi
    277f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2782:	48 63 d0             	movslq %eax,%rdx
    2785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2789:	48 01 d0             	add    %rdx,%rax
    278c:	89 f2                	mov    %esi,%edx
    278e:	88 10                	mov    %dl,(%rax)
    2790:	48 8b 05 99 29 00 00 	mov    0x2999(%rip),%rax        # 5130 <rows>
    2797:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    279b:	48 8b 05 86 29 00 00 	mov    0x2986(%rip),%rax        # 5128 <columns>
    27a2:	48 0f af d0          	imul   %rax,%rdx
    27a6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27a9:	83 e8 01             	sub    $0x1,%eax
    27ac:	48 98                	cltq   
    27ae:	48 01 c2             	add    %rax,%rdx
    27b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    27b5:	48 01 d0             	add    %rdx,%rax
    27b8:	0f b6 30             	movzbl (%rax),%esi
    27bb:	48 8b 05 6e 29 00 00 	mov    0x296e(%rip),%rax        # 5130 <rows>
    27c2:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    27c6:	48 8b 05 5b 29 00 00 	mov    0x295b(%rip),%rax        # 5128 <columns>
    27cd:	48 0f af d0          	imul   %rax,%rdx
    27d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    27d4:	83 c0 01             	add    $0x1,%eax
    27d7:	48 98                	cltq   
    27d9:	48 01 c2             	add    %rax,%rdx
    27dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    27e0:	48 01 d0             	add    %rdx,%rax
    27e3:	0f b6 00             	movzbl (%rax),%eax
    27e6:	01 c6                	add    %eax,%esi
    27e8:	48 8b 05 41 29 00 00 	mov    0x2941(%rip),%rax        # 5130 <rows>
    27ef:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    27f3:	48 8b 05 2e 29 00 00 	mov    0x292e(%rip),%rax        # 5128 <columns>
    27fa:	48 0f af d0          	imul   %rax,%rdx
    27fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2801:	83 e8 01             	sub    $0x1,%eax
    2804:	48 98                	cltq   
    2806:	48 01 c2             	add    %rax,%rdx
    2809:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    280d:	48 01 d0             	add    %rdx,%rax
    2810:	0f b6 00             	movzbl (%rax),%eax
    2813:	01 c6                	add    %eax,%esi
    2815:	48 8b 05 14 29 00 00 	mov    0x2914(%rip),%rax        # 5130 <rows>
    281c:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    2820:	48 8b 05 01 29 00 00 	mov    0x2901(%rip),%rax        # 5128 <columns>
    2827:	48 0f af d0          	imul   %rax,%rdx
    282b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    282e:	48 98                	cltq   
    2830:	48 01 c2             	add    %rax,%rdx
    2833:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2837:	48 01 d0             	add    %rdx,%rax
    283a:	0f b6 00             	movzbl (%rax),%eax
    283d:	01 c6                	add    %eax,%esi
    283f:	48 8b 05 ea 28 00 00 	mov    0x28ea(%rip),%rax        # 5130 <rows>
    2846:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    284a:	48 8b 05 d7 28 00 00 	mov    0x28d7(%rip),%rax        # 5128 <columns>
    2851:	48 0f af d0          	imul   %rax,%rdx
    2855:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2858:	83 c0 01             	add    $0x1,%eax
    285b:	48 98                	cltq   
    285d:	48 01 c2             	add    %rax,%rdx
    2860:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2864:	48 01 d0             	add    %rdx,%rax
    2867:	0f b6 00             	movzbl (%rax),%eax
    286a:	01 c6                	add    %eax,%esi
    286c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    286f:	48 63 d0             	movslq %eax,%rdx
    2872:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2876:	48 01 d0             	add    %rdx,%rax
    2879:	0f b6 00             	movzbl (%rax),%eax
    287c:	8d 14 06             	lea    (%rsi,%rax,1),%edx
    287f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2882:	48 98                	cltq   
    2884:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    2888:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    288c:	48 01 f0             	add    %rsi,%rax
    288f:	0f b6 00             	movzbl (%rax),%eax
    2892:	01 c2                	add    %eax,%edx
    2894:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2897:	48 98                	cltq   
    2899:	48 8d 70 01          	lea    0x1(%rax),%rsi
    289d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28a1:	48 01 f0             	add    %rsi,%rax
    28a4:	0f b6 00             	movzbl (%rax),%eax
    28a7:	01 d0                	add    %edx,%eax
    28a9:	88 45 e6             	mov    %al,-0x1a(%rbp)
    28ac:	80 7d e6 03          	cmpb   $0x3,-0x1a(%rbp)
    28b0:	0f 94 c0             	sete   %al
    28b3:	89 c6                	mov    %eax,%esi
    28b5:	80 7d e6 02          	cmpb   $0x2,-0x1a(%rbp)
    28b9:	0f 94 c0             	sete   %al
    28bc:	89 c7                	mov    %eax,%edi
    28be:	48 8b 05 6b 28 00 00 	mov    0x286b(%rip),%rax        # 5130 <rows>
    28c5:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    28c9:	48 8b 05 58 28 00 00 	mov    0x2858(%rip),%rax        # 5128 <columns>
    28d0:	48 0f af d0          	imul   %rax,%rdx
    28d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    28d7:	48 98                	cltq   
    28d9:	48 01 c2             	add    %rax,%rdx
    28dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    28e0:	48 01 d0             	add    %rdx,%rax
    28e3:	0f b6 00             	movzbl (%rax),%eax
    28e6:	21 f8                	and    %edi,%eax
    28e8:	09 c6                	or     %eax,%esi
    28ea:	48 8b 05 3f 28 00 00 	mov    0x283f(%rip),%rax        # 5130 <rows>
    28f1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    28f5:	48 8b 05 2c 28 00 00 	mov    0x282c(%rip),%rax        # 5128 <columns>
    28fc:	48 0f af d0          	imul   %rax,%rdx
    2900:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2903:	48 98                	cltq   
    2905:	48 01 c2             	add    %rax,%rdx
    2908:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    290c:	48 01 d0             	add    %rdx,%rax
    290f:	89 f2                	mov    %esi,%edx
    2911:	88 10                	mov    %dl,(%rax)
    2913:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    2917:	39 4d fc             	cmp    %ecx,-0x4(%rbp)
    291a:	0f 8c 24 fd ff ff    	jl     2644 <calculate_top_bottom._omp_fn.0+0x65>
    2920:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2924:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2928:	48 89 d6             	mov    %rdx,%rsi
    292b:	48 89 c7             	mov    %rax,%rdi
    292e:	e8 1d e8 ff ff       	call   1150 <GOMP_loop_maybe_nonmonotonic_runtime_next@plt>
    2933:	84 c0                	test   %al,%al
    2935:	0f 85 fc fc ff ff    	jne    2637 <calculate_top_bottom._omp_fn.0+0x58>
    293b:	e8 90 e7 ff ff       	call   10d0 <GOMP_loop_end_nowait@plt>
    2940:	c9                   	leave  
    2941:	c3                   	ret    

0000000000002942 <calculate_next_gen._omp_fn.0>:
    2942:	55                   	push   %rbp
    2943:	48 89 e5             	mov    %rsp,%rbp
    2946:	48 83 ec 40          	sub    $0x40,%rsp
    294a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    294e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2952:	48 8b 40 08          	mov    0x8(%rax),%rax
    2956:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    295a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    295e:	48 8b 00             	mov    (%rax),%rax
    2961:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2965:	48 8b 05 c4 27 00 00 	mov    0x27c4(%rip),%rax        # 5130 <rows>
    296c:	48 83 e8 01          	sub    $0x1,%rax
    2970:	48 98                	cltq   
    2972:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    2976:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    297a:	49 89 c8             	mov    %rcx,%r8
    297d:	48 89 d1             	mov    %rdx,%rcx
    2980:	ba 01 00 00 00       	mov    $0x1,%edx
    2985:	48 89 c6             	mov    %rax,%rsi
    2988:	bf 01 00 00 00       	mov    $0x1,%edi
    298d:	e8 2e e7 ff ff       	call   10c0 <GOMP_loop_maybe_nonmonotonic_runtime_start@plt>
    2992:	84 c0                	test   %al,%al
    2994:	0f 84 02 02 00 00    	je     2b9c <calculate_next_gen._omp_fn.0+0x25a>
    299a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    299e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    29a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29a5:	89 c6                	mov    %eax,%esi
    29a7:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
    29ae:	90                   	nop
    29af:	8b 45 f8             	mov    -0x8(%rbp),%eax
    29b2:	48 98                	cltq   
    29b4:	48 8b 15 6d 27 00 00 	mov    0x276d(%rip),%rdx        # 5128 <columns>
    29bb:	48 83 ea 01          	sub    $0x1,%rdx
    29bf:	48 39 d0             	cmp    %rdx,%rax
    29c2:	72 25                	jb     29e9 <calculate_next_gen._omp_fn.0+0xa7>
    29c4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    29c8:	39 75 fc             	cmp    %esi,-0x4(%rbp)
    29cb:	7c da                	jl     29a7 <calculate_next_gen._omp_fn.0+0x65>
    29cd:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    29d1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    29d5:	48 89 d6             	mov    %rdx,%rsi
    29d8:	48 89 c7             	mov    %rax,%rdi
    29db:	e8 70 e7 ff ff       	call   1150 <GOMP_loop_maybe_nonmonotonic_runtime_next@plt>
    29e0:	84 c0                	test   %al,%al
    29e2:	75 b6                	jne    299a <calculate_next_gen._omp_fn.0+0x58>
    29e4:	e9 b3 01 00 00       	jmp    2b9c <calculate_next_gen._omp_fn.0+0x25a>
    29e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    29ec:	83 e8 01             	sub    $0x1,%eax
    29ef:	48 63 d0             	movslq %eax,%rdx
    29f2:	48 8b 05 2f 27 00 00 	mov    0x272f(%rip),%rax        # 5128 <columns>
    29f9:	48 0f af d0          	imul   %rax,%rdx
    29fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2a00:	83 e8 01             	sub    $0x1,%eax
    2a03:	48 98                	cltq   
    2a05:	48 01 c2             	add    %rax,%rdx
    2a08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a0c:	48 01 d0             	add    %rdx,%rax
    2a0f:	0f b6 08             	movzbl (%rax),%ecx
    2a12:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a15:	83 e8 01             	sub    $0x1,%eax
    2a18:	48 63 d0             	movslq %eax,%rdx
    2a1b:	48 8b 05 06 27 00 00 	mov    0x2706(%rip),%rax        # 5128 <columns>
    2a22:	48 0f af d0          	imul   %rax,%rdx
    2a26:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2a29:	48 98                	cltq   
    2a2b:	48 01 c2             	add    %rax,%rdx
    2a2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a32:	48 01 d0             	add    %rdx,%rax
    2a35:	0f b6 00             	movzbl (%rax),%eax
    2a38:	01 c1                	add    %eax,%ecx
    2a3a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a3d:	83 e8 01             	sub    $0x1,%eax
    2a40:	48 63 d0             	movslq %eax,%rdx
    2a43:	48 8b 05 de 26 00 00 	mov    0x26de(%rip),%rax        # 5128 <columns>
    2a4a:	48 0f af d0          	imul   %rax,%rdx
    2a4e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2a51:	83 c0 01             	add    $0x1,%eax
    2a54:	48 98                	cltq   
    2a56:	48 01 c2             	add    %rax,%rdx
    2a59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a5d:	48 01 d0             	add    %rdx,%rax
    2a60:	0f b6 00             	movzbl (%rax),%eax
    2a63:	01 c1                	add    %eax,%ecx
    2a65:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a68:	48 63 d0             	movslq %eax,%rdx
    2a6b:	48 8b 05 b6 26 00 00 	mov    0x26b6(%rip),%rax        # 5128 <columns>
    2a72:	48 0f af d0          	imul   %rax,%rdx
    2a76:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2a79:	83 e8 01             	sub    $0x1,%eax
    2a7c:	48 98                	cltq   
    2a7e:	48 01 c2             	add    %rax,%rdx
    2a81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a85:	48 01 d0             	add    %rdx,%rax
    2a88:	0f b6 00             	movzbl (%rax),%eax
    2a8b:	01 c1                	add    %eax,%ecx
    2a8d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2a90:	48 63 d0             	movslq %eax,%rdx
    2a93:	48 8b 05 8e 26 00 00 	mov    0x268e(%rip),%rax        # 5128 <columns>
    2a9a:	48 0f af d0          	imul   %rax,%rdx
    2a9e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2aa1:	83 c0 01             	add    $0x1,%eax
    2aa4:	48 98                	cltq   
    2aa6:	48 01 c2             	add    %rax,%rdx
    2aa9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2aad:	48 01 d0             	add    %rdx,%rax
    2ab0:	0f b6 00             	movzbl (%rax),%eax
    2ab3:	01 c1                	add    %eax,%ecx
    2ab5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2ab8:	83 c0 01             	add    $0x1,%eax
    2abb:	48 63 d0             	movslq %eax,%rdx
    2abe:	48 8b 05 63 26 00 00 	mov    0x2663(%rip),%rax        # 5128 <columns>
    2ac5:	48 0f af d0          	imul   %rax,%rdx
    2ac9:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2acc:	83 e8 01             	sub    $0x1,%eax
    2acf:	48 98                	cltq   
    2ad1:	48 01 c2             	add    %rax,%rdx
    2ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2ad8:	48 01 d0             	add    %rdx,%rax
    2adb:	0f b6 00             	movzbl (%rax),%eax
    2ade:	01 c1                	add    %eax,%ecx
    2ae0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2ae3:	83 c0 01             	add    $0x1,%eax
    2ae6:	48 63 d0             	movslq %eax,%rdx
    2ae9:	48 8b 05 38 26 00 00 	mov    0x2638(%rip),%rax        # 5128 <columns>
    2af0:	48 0f af d0          	imul   %rax,%rdx
    2af4:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2af7:	48 98                	cltq   
    2af9:	48 01 c2             	add    %rax,%rdx
    2afc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b00:	48 01 d0             	add    %rdx,%rax
    2b03:	0f b6 00             	movzbl (%rax),%eax
    2b06:	01 c1                	add    %eax,%ecx
    2b08:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2b0b:	83 c0 01             	add    $0x1,%eax
    2b0e:	48 63 d0             	movslq %eax,%rdx
    2b11:	48 8b 05 10 26 00 00 	mov    0x2610(%rip),%rax        # 5128 <columns>
    2b18:	48 0f af d0          	imul   %rax,%rdx
    2b1c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2b1f:	83 c0 01             	add    $0x1,%eax
    2b22:	48 98                	cltq   
    2b24:	48 01 c2             	add    %rax,%rdx
    2b27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b2b:	48 01 d0             	add    %rdx,%rax
    2b2e:	0f b6 00             	movzbl (%rax),%eax
    2b31:	01 c8                	add    %ecx,%eax
    2b33:	88 45 e7             	mov    %al,-0x19(%rbp)
    2b36:	80 7d e7 03          	cmpb   $0x3,-0x19(%rbp)
    2b3a:	0f 94 c0             	sete   %al
    2b3d:	89 c1                	mov    %eax,%ecx
    2b3f:	80 7d e7 02          	cmpb   $0x2,-0x19(%rbp)
    2b43:	0f 94 c0             	sete   %al
    2b46:	89 c7                	mov    %eax,%edi
    2b48:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2b4b:	48 63 d0             	movslq %eax,%rdx
    2b4e:	48 8b 05 d3 25 00 00 	mov    0x25d3(%rip),%rax        # 5128 <columns>
    2b55:	48 0f af d0          	imul   %rax,%rdx
    2b59:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2b5c:	48 98                	cltq   
    2b5e:	48 01 c2             	add    %rax,%rdx
    2b61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b65:	48 01 d0             	add    %rdx,%rax
    2b68:	0f b6 00             	movzbl (%rax),%eax
    2b6b:	21 f8                	and    %edi,%eax
    2b6d:	09 c1                	or     %eax,%ecx
    2b6f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2b72:	48 63 d0             	movslq %eax,%rdx
    2b75:	48 8b 05 ac 25 00 00 	mov    0x25ac(%rip),%rax        # 5128 <columns>
    2b7c:	48 0f af d0          	imul   %rax,%rdx
    2b80:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2b83:	48 98                	cltq   
    2b85:	48 01 c2             	add    %rax,%rdx
    2b88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b8c:	48 01 d0             	add    %rdx,%rax
    2b8f:	89 ca                	mov    %ecx,%edx
    2b91:	88 10                	mov    %dl,(%rax)
    2b93:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    2b97:	e9 13 fe ff ff       	jmp    29af <calculate_next_gen._omp_fn.0+0x6d>
    2b9c:	e8 2f e5 ff ff       	call   10d0 <GOMP_loop_end_nowait@plt>
    2ba1:	c9                   	leave  
    2ba2:	c3                   	ret    
    2ba3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2baa:	00 00 00 
    2bad:	0f 1f 00             	nopl   (%rax)

0000000000002bb0 <__libc_csu_init>:
    2bb0:	41 57                	push   %r15
    2bb2:	4c 8d 3d 1f 22 00 00 	lea    0x221f(%rip),%r15        # 4dd8 <__frame_dummy_init_array_entry>
    2bb9:	41 56                	push   %r14
    2bbb:	49 89 d6             	mov    %rdx,%r14
    2bbe:	41 55                	push   %r13
    2bc0:	49 89 f5             	mov    %rsi,%r13
    2bc3:	41 54                	push   %r12
    2bc5:	41 89 fc             	mov    %edi,%r12d
    2bc8:	55                   	push   %rbp
    2bc9:	48 8d 2d 10 22 00 00 	lea    0x2210(%rip),%rbp        # 4de0 <__do_global_dtors_aux_fini_array_entry>
    2bd0:	53                   	push   %rbx
    2bd1:	4c 29 fd             	sub    %r15,%rbp
    2bd4:	48 83 ec 08          	sub    $0x8,%rsp
    2bd8:	e8 23 e4 ff ff       	call   1000 <_init>
    2bdd:	48 c1 fd 03          	sar    $0x3,%rbp
    2be1:	74 1b                	je     2bfe <__libc_csu_init+0x4e>
    2be3:	31 db                	xor    %ebx,%ebx
    2be5:	0f 1f 00             	nopl   (%rax)
    2be8:	4c 89 f2             	mov    %r14,%rdx
    2beb:	4c 89 ee             	mov    %r13,%rsi
    2bee:	44 89 e7             	mov    %r12d,%edi
    2bf1:	41 ff 14 df          	call   *(%r15,%rbx,8)
    2bf5:	48 83 c3 01          	add    $0x1,%rbx
    2bf9:	48 39 dd             	cmp    %rbx,%rbp
    2bfc:	75 ea                	jne    2be8 <__libc_csu_init+0x38>
    2bfe:	48 83 c4 08          	add    $0x8,%rsp
    2c02:	5b                   	pop    %rbx
    2c03:	5d                   	pop    %rbp
    2c04:	41 5c                	pop    %r12
    2c06:	41 5d                	pop    %r13
    2c08:	41 5e                	pop    %r14
    2c0a:	41 5f                	pop    %r15
    2c0c:	c3                   	ret    
    2c0d:	0f 1f 00             	nopl   (%rax)

0000000000002c10 <__libc_csu_fini>:
    2c10:	c3                   	ret    

Disassembly of section .fini:

0000000000002c14 <_fini>:
    2c14:	48 83 ec 08          	sub    $0x8,%rsp
    2c18:	48 83 c4 08          	add    $0x8,%rsp
    2c1c:	c3                   	ret    
